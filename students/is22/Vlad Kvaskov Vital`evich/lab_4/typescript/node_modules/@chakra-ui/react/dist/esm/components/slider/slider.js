"use strict";
"use client";
import { Slider } from '@ark-ui/react/slider';
import { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';

const {
  withProvider,
  withContext,
  useStyles: useSliderStyles,
  PropsProvider
} = createSlotRecipeContext({ key: "slider" });
const SliderRootProvider = withProvider(Slider.RootProvider, "root", { forwardAsChild: true });
const SliderRoot = withProvider(
  Slider.Root,
  "root",
  { forwardAsChild: true }
);
const SliderPropsProvider = PropsProvider;
const SliderControl = withContext(
  Slider.Control,
  "control",
  { forwardAsChild: true }
);
const SliderTrack = withContext(
  Slider.Track,
  "track",
  { forwardAsChild: true }
);
const SliderRange = withContext(
  Slider.Range,
  "range",
  { forwardAsChild: true }
);
const SliderThumb = withContext(
  Slider.Thumb,
  "thumb",
  { forwardAsChild: true }
);
const SliderValueText = withContext(Slider.ValueText, "valueText", { forwardAsChild: true });
const SliderLabel = withContext(
  Slider.Label,
  "label",
  { forwardAsChild: true }
);
const SliderMarkerGroup = withContext(Slider.MarkerGroup, "markerGroup", { forwardAsChild: true });
const SliderMarker = withContext(
  Slider.Marker,
  "marker",
  { forwardAsChild: true }
);
const SliderMarkerIndicator = withContext("div", "markerIndicator");
const SliderContext = Slider.Context;
const SliderHiddenInput = Slider.HiddenInput;

export { SliderContext, SliderControl, SliderHiddenInput, SliderLabel, SliderMarker, SliderMarkerGroup, SliderMarkerIndicator, SliderPropsProvider, SliderRange, SliderRoot, SliderRootProvider, SliderThumb, SliderTrack, SliderValueText, useSliderStyles };
