"use strict";
import { accordionAnatomy as accordionAnatomy$1, createAnatomy, dialogAnatomy as dialogAnatomy$1, editableAnatomy as editableAnatomy$1, fieldAnatomy as fieldAnatomy$1, fileUploadAnatomy as fileUploadAnatomy$1, menuAnatomy as menuAnatomy$1, popoverAnatomy as popoverAnatomy$1, radioGroupAnatomy as radioGroupAnatomy$1, ratingGroupAnatomy as ratingGroupAnatomy$1, selectAnatomy as selectAnatomy$1, sliderAnatomy as sliderAnatomy$1, switchAnatomy as switchAnatomy$1, avatarAnatomy as avatarAnatomy$1, checkboxAnatomy as checkboxAnatomy$1, collapsibleAnatomy, hoverCardAnatomy as hoverCardAnatomy$1, numberInputAnatomy as numberInputAnatomy$1, pinInputAnatomy as pinInputAnatomy$1, progressAnatomy as progressAnatomy$1, segmentGroupAnatomy as segmentGroupAnatomy$1, tooltipAnatomy as tooltipAnatomy$1 } from '@ark-ui/anatomy';

const accordionAnatomy = accordionAnatomy$1.extendWith("itemBody");
const actionBarAnatomy = createAnatomy("action-bar").parts(
  "positioner",
  "content",
  "separator",
  "selectionTrigger",
  "closeTrigger"
);
const alertAnatomy = createAnatomy("alert").parts(
  "title",
  "description",
  "root",
  "indicator",
  "content"
);
const avatarAnatomy = avatarAnatomy$1;
const breadcrumbAnatomy = createAnatomy("breadcrumb").parts(
  "link",
  "currentLink",
  "item",
  "list",
  "root",
  "ellipsis",
  "separator"
);
const blockquoteAnatomy = createAnatomy("blockquote").parts(
  "root",
  "icon",
  "content",
  "caption"
);
const cardAnatomy = createAnatomy("card").parts(
  "root",
  "header",
  "body",
  "footer",
  "title",
  "description"
);
const checkboxAnatomy = checkboxAnatomy$1;
const checkboxCardAnatomy = createAnatomy("checkbox-card", [
  "root",
  "control",
  "label",
  "description",
  "addon",
  "indicator",
  "content"
]);
const collapsibleAnataomy = collapsibleAnatomy;
const dataListAnatomy = createAnatomy("data-list").parts(
  "root",
  "item",
  "itemLabel",
  "itemValue"
);
const dialogAnatomy = dialogAnatomy$1.extendWith(
  "header",
  "body",
  "footer",
  "backdrop"
);
const drawerAnatomy = dialogAnatomy$1.extendWith(
  "header",
  "body",
  "footer",
  "backdrop"
);
const editableAnatomy = editableAnatomy$1.extendWith("textarea");
const emptyStateAnatomy = createAnatomy("empty-state", [
  "root",
  "content",
  "indicator",
  "title",
  "description"
]);
const fieldAnatomy = fieldAnatomy$1.extendWith("requiredIndicator");
const fileUploadAnatomy = fileUploadAnatomy$1.extendWith(
  "itemContent",
  "dropzoneContent"
);
const hoverCardAnatomy = hoverCardAnatomy$1;
const listAnatomy = createAnatomy("list").parts(
  "root",
  "item",
  "indicator"
);
const menuAnatomy = menuAnatomy$1.extendWith("itemCommand");
const nativeSelectAnatomy = createAnatomy("select").parts(
  "root",
  "field",
  "indicator"
);
const numberInputAnatomy = numberInputAnatomy$1;
const pinInputAnatomy = pinInputAnatomy$1;
const popoverAnatomy = popoverAnatomy$1.extendWith(
  "header",
  "body",
  "footer"
);
const progressAnatomy = progressAnatomy$1;
const radioGroupAnatomy = radioGroupAnatomy$1.extendWith(
  "itemAddon",
  "itemIndicator"
);
const radioCardAnatomy = radioGroupAnatomy.extendWith(
  "itemContent",
  "itemDescription"
);
const ratingGroupAnatomy = ratingGroupAnatomy$1.extendWith("itemIndicator");
const segmentGroupAnatomy = segmentGroupAnatomy$1;
const selectAnatomy = selectAnatomy$1.extendWith("indicatorGroup");
const sliderAnatomy = sliderAnatomy$1.extendWith("markerIndicator");
const statAnatomy = createAnatomy("stat").parts(
  "root",
  "label",
  "helpText",
  "valueText",
  "valueUnit",
  "indicator"
);
const statusAnatomy = createAnatomy("status").parts("root", "indicator");
const stepsAnatomy = createAnatomy("steps", [
  "root",
  "list",
  "item",
  "trigger",
  "indicator",
  "separator",
  "content",
  "title",
  "description",
  "nextTrigger",
  "prevTrigger",
  "progress"
]);
const switchAnatomy = switchAnatomy$1.extendWith("indicator");
const tableAnatomy = createAnatomy("table").parts(
  "root",
  "header",
  "body",
  "row",
  "columnHeader",
  "cell",
  "footer",
  "caption"
);
const toastAnatomy = createAnatomy("toast").parts(
  "root",
  "title",
  "description",
  "indicator",
  "closeTrigger",
  "actionTrigger"
);
const tabsAnatomy = createAnatomy("tabs").parts(
  "root",
  "trigger",
  "list",
  "content",
  "contentGroup",
  "indicator"
);
const tagAnatomy = createAnatomy("tag").parts(
  "root",
  "label",
  "closeTrigger",
  "startElement",
  "endElement"
);
const timelineAnatomy = createAnatomy("timeline").parts(
  "root",
  "item",
  "content",
  "separator",
  "indicator",
  "connector",
  "title",
  "description"
);
const tooltipAnatomy = tooltipAnatomy$1;

export { accordionAnatomy, actionBarAnatomy, alertAnatomy, avatarAnatomy, blockquoteAnatomy, breadcrumbAnatomy, cardAnatomy, checkboxAnatomy, checkboxCardAnatomy, collapsibleAnataomy, dataListAnatomy, dialogAnatomy, drawerAnatomy, editableAnatomy, emptyStateAnatomy, fieldAnatomy, fileUploadAnatomy, hoverCardAnatomy, listAnatomy, menuAnatomy, nativeSelectAnatomy, numberInputAnatomy, pinInputAnatomy, popoverAnatomy, progressAnatomy, radioCardAnatomy, radioGroupAnatomy, ratingGroupAnatomy, segmentGroupAnatomy, selectAnatomy, sliderAnatomy, statAnatomy, statusAnatomy, stepsAnatomy, switchAnatomy, tableAnatomy, tabsAnatomy, tagAnatomy, timelineAnatomy, toastAnatomy, tooltipAnatomy };
