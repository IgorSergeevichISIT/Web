"use strict";
'use strict';

var anatomy = require('@ark-ui/anatomy');

const accordionAnatomy = anatomy.accordionAnatomy.extendWith("itemBody");
const actionBarAnatomy = anatomy.createAnatomy("action-bar").parts(
  "positioner",
  "content",
  "separator",
  "selectionTrigger",
  "closeTrigger"
);
const alertAnatomy = anatomy.createAnatomy("alert").parts(
  "title",
  "description",
  "root",
  "indicator",
  "content"
);
const avatarAnatomy = anatomy.avatarAnatomy;
const breadcrumbAnatomy = anatomy.createAnatomy("breadcrumb").parts(
  "link",
  "currentLink",
  "item",
  "list",
  "root",
  "ellipsis",
  "separator"
);
const blockquoteAnatomy = anatomy.createAnatomy("blockquote").parts(
  "root",
  "icon",
  "content",
  "caption"
);
const cardAnatomy = anatomy.createAnatomy("card").parts(
  "root",
  "header",
  "body",
  "footer",
  "title",
  "description"
);
const checkboxAnatomy = anatomy.checkboxAnatomy;
const checkboxCardAnatomy = anatomy.createAnatomy("checkbox-card", [
  "root",
  "control",
  "label",
  "description",
  "addon",
  "indicator",
  "content"
]);
const collapsibleAnataomy = anatomy.collapsibleAnatomy;
const dataListAnatomy = anatomy.createAnatomy("data-list").parts(
  "root",
  "item",
  "itemLabel",
  "itemValue"
);
const dialogAnatomy = anatomy.dialogAnatomy.extendWith(
  "header",
  "body",
  "footer",
  "backdrop"
);
const drawerAnatomy = anatomy.dialogAnatomy.extendWith(
  "header",
  "body",
  "footer",
  "backdrop"
);
const editableAnatomy = anatomy.editableAnatomy.extendWith("textarea");
const emptyStateAnatomy = anatomy.createAnatomy("empty-state", [
  "root",
  "content",
  "indicator",
  "title",
  "description"
]);
const fieldAnatomy = anatomy.fieldAnatomy.extendWith("requiredIndicator");
const fileUploadAnatomy = anatomy.fileUploadAnatomy.extendWith(
  "itemContent",
  "dropzoneContent"
);
const hoverCardAnatomy = anatomy.hoverCardAnatomy;
const listAnatomy = anatomy.createAnatomy("list").parts(
  "root",
  "item",
  "indicator"
);
const menuAnatomy = anatomy.menuAnatomy.extendWith("itemCommand");
const nativeSelectAnatomy = anatomy.createAnatomy("select").parts(
  "root",
  "field",
  "indicator"
);
const numberInputAnatomy = anatomy.numberInputAnatomy;
const pinInputAnatomy = anatomy.pinInputAnatomy;
const popoverAnatomy = anatomy.popoverAnatomy.extendWith(
  "header",
  "body",
  "footer"
);
const progressAnatomy = anatomy.progressAnatomy;
const radioGroupAnatomy = anatomy.radioGroupAnatomy.extendWith(
  "itemAddon",
  "itemIndicator"
);
const radioCardAnatomy = radioGroupAnatomy.extendWith(
  "itemContent",
  "itemDescription"
);
const ratingGroupAnatomy = anatomy.ratingGroupAnatomy.extendWith("itemIndicator");
const segmentGroupAnatomy = anatomy.segmentGroupAnatomy;
const selectAnatomy = anatomy.selectAnatomy.extendWith("indicatorGroup");
const sliderAnatomy = anatomy.sliderAnatomy.extendWith("markerIndicator");
const statAnatomy = anatomy.createAnatomy("stat").parts(
  "root",
  "label",
  "helpText",
  "valueText",
  "valueUnit",
  "indicator"
);
const statusAnatomy = anatomy.createAnatomy("status").parts("root", "indicator");
const stepsAnatomy = anatomy.createAnatomy("steps", [
  "root",
  "list",
  "item",
  "trigger",
  "indicator",
  "separator",
  "content",
  "title",
  "description",
  "nextTrigger",
  "prevTrigger",
  "progress"
]);
const switchAnatomy = anatomy.switchAnatomy.extendWith("indicator");
const tableAnatomy = anatomy.createAnatomy("table").parts(
  "root",
  "header",
  "body",
  "row",
  "columnHeader",
  "cell",
  "footer",
  "caption"
);
const toastAnatomy = anatomy.createAnatomy("toast").parts(
  "root",
  "title",
  "description",
  "indicator",
  "closeTrigger",
  "actionTrigger"
);
const tabsAnatomy = anatomy.createAnatomy("tabs").parts(
  "root",
  "trigger",
  "list",
  "content",
  "contentGroup",
  "indicator"
);
const tagAnatomy = anatomy.createAnatomy("tag").parts(
  "root",
  "label",
  "closeTrigger",
  "startElement",
  "endElement"
);
const timelineAnatomy = anatomy.createAnatomy("timeline").parts(
  "root",
  "item",
  "content",
  "separator",
  "indicator",
  "connector",
  "title",
  "description"
);
const tooltipAnatomy = anatomy.tooltipAnatomy;

exports.accordionAnatomy = accordionAnatomy;
exports.actionBarAnatomy = actionBarAnatomy;
exports.alertAnatomy = alertAnatomy;
exports.avatarAnatomy = avatarAnatomy;
exports.blockquoteAnatomy = blockquoteAnatomy;
exports.breadcrumbAnatomy = breadcrumbAnatomy;
exports.cardAnatomy = cardAnatomy;
exports.checkboxAnatomy = checkboxAnatomy;
exports.checkboxCardAnatomy = checkboxCardAnatomy;
exports.collapsibleAnataomy = collapsibleAnataomy;
exports.dataListAnatomy = dataListAnatomy;
exports.dialogAnatomy = dialogAnatomy;
exports.drawerAnatomy = drawerAnatomy;
exports.editableAnatomy = editableAnatomy;
exports.emptyStateAnatomy = emptyStateAnatomy;
exports.fieldAnatomy = fieldAnatomy;
exports.fileUploadAnatomy = fileUploadAnatomy;
exports.hoverCardAnatomy = hoverCardAnatomy;
exports.listAnatomy = listAnatomy;
exports.menuAnatomy = menuAnatomy;
exports.nativeSelectAnatomy = nativeSelectAnatomy;
exports.numberInputAnatomy = numberInputAnatomy;
exports.pinInputAnatomy = pinInputAnatomy;
exports.popoverAnatomy = popoverAnatomy;
exports.progressAnatomy = progressAnatomy;
exports.radioCardAnatomy = radioCardAnatomy;
exports.radioGroupAnatomy = radioGroupAnatomy;
exports.ratingGroupAnatomy = ratingGroupAnatomy;
exports.segmentGroupAnatomy = segmentGroupAnatomy;
exports.selectAnatomy = selectAnatomy;
exports.sliderAnatomy = sliderAnatomy;
exports.statAnatomy = statAnatomy;
exports.statusAnatomy = statusAnatomy;
exports.stepsAnatomy = stepsAnatomy;
exports.switchAnatomy = switchAnatomy;
exports.tableAnatomy = tableAnatomy;
exports.tabsAnatomy = tabsAnatomy;
exports.tagAnatomy = tagAnatomy;
exports.timelineAnatomy = timelineAnatomy;
exports.toastAnatomy = toastAnatomy;
exports.tooltipAnatomy = tooltipAnatomy;
