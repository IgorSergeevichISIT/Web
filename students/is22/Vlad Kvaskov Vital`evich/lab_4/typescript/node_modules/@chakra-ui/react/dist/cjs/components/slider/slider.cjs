"use strict";
"use client";
'use strict';

var slider = require('@ark-ui/react/slider');
var createSlotRecipeContext = require('../../styled-system/create-slot-recipe-context.cjs');

const {
  withProvider,
  withContext,
  useStyles: useSliderStyles,
  PropsProvider
} = createSlotRecipeContext.createSlotRecipeContext({ key: "slider" });
const SliderRootProvider = withProvider(slider.Slider.RootProvider, "root", { forwardAsChild: true });
const SliderRoot = withProvider(
  slider.Slider.Root,
  "root",
  { forwardAsChild: true }
);
const SliderPropsProvider = PropsProvider;
const SliderControl = withContext(
  slider.Slider.Control,
  "control",
  { forwardAsChild: true }
);
const SliderTrack = withContext(
  slider.Slider.Track,
  "track",
  { forwardAsChild: true }
);
const SliderRange = withContext(
  slider.Slider.Range,
  "range",
  { forwardAsChild: true }
);
const SliderThumb = withContext(
  slider.Slider.Thumb,
  "thumb",
  { forwardAsChild: true }
);
const SliderValueText = withContext(slider.Slider.ValueText, "valueText", { forwardAsChild: true });
const SliderLabel = withContext(
  slider.Slider.Label,
  "label",
  { forwardAsChild: true }
);
const SliderMarkerGroup = withContext(slider.Slider.MarkerGroup, "markerGroup", { forwardAsChild: true });
const SliderMarker = withContext(
  slider.Slider.Marker,
  "marker",
  { forwardAsChild: true }
);
const SliderMarkerIndicator = withContext("div", "markerIndicator");
const SliderContext = slider.Slider.Context;
const SliderHiddenInput = slider.Slider.HiddenInput;

exports.SliderContext = SliderContext;
exports.SliderControl = SliderControl;
exports.SliderHiddenInput = SliderHiddenInput;
exports.SliderLabel = SliderLabel;
exports.SliderMarker = SliderMarker;
exports.SliderMarkerGroup = SliderMarkerGroup;
exports.SliderMarkerIndicator = SliderMarkerIndicator;
exports.SliderPropsProvider = SliderPropsProvider;
exports.SliderRange = SliderRange;
exports.SliderRoot = SliderRoot;
exports.SliderRootProvider = SliderRootProvider;
exports.SliderThumb = SliderThumb;
exports.SliderTrack = SliderTrack;
exports.SliderValueText = SliderValueText;
exports.useSliderStyles = useSliderStyles;
