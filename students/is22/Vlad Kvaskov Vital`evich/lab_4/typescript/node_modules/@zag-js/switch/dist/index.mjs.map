{"version":3,"sources":["../src/switch.anatomy.ts","../src/switch.connect.ts","../src/switch.dom.ts","../src/switch.machine.ts","../src/switch.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"switch\").parts(\"root\", \"label\", \"control\", \"thumb\")\nexport const parts = anatomy.build()\n","import { dataAttr, visuallyHiddenStyle } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./switch.anatomy\"\nimport { dom } from \"./switch.dom\"\nimport type { MachineApi, Send, State } from \"./switch.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const disabled = state.context.isDisabled\n  const focused = !disabled && state.context.focused\n  const checked = state.context.checked\n  const readOnly = state.context.readOnly\n\n  const dataAttrs = {\n    \"data-active\": dataAttr(state.context.active),\n    \"data-focus\": dataAttr(focused),\n    \"data-readonly\": dataAttr(readOnly),\n    \"data-hover\": dataAttr(state.context.hovered),\n    \"data-disabled\": dataAttr(disabled),\n    \"data-state\": state.context.checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": dataAttr(state.context.invalid),\n  }\n\n  return {\n    checked: checked,\n    disabled: disabled,\n    focused: focused,\n    setChecked(checked) {\n      send({ type: \"CHECKED.SET\", checked, isTrusted: false })\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked: checked, isTrusted: false })\n    },\n\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onPointerMove() {\n          if (disabled) return\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } })\n        },\n        onPointerLeave() {\n          if (disabled) return\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } })\n        },\n        onClick(event) {\n          if (event.target === dom.getHiddenInputEl(state.context)) {\n            event.stopPropagation()\n          }\n        },\n      })\n    },\n\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n      })\n    },\n\n    getThumbProps() {\n      return normalize.element({\n        ...parts.thumb.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getThumbId(state.context),\n        \"aria-hidden\": true,\n      })\n    },\n\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"aria-hidden\": true,\n      })\n    },\n\n    getHiddenInputProps() {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        type: \"checkbox\",\n        required: state.context.required,\n        defaultChecked: checked,\n        disabled: disabled,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-invalid\": state.context.invalid,\n        name: state.context.name,\n        form: state.context.form,\n        value: state.context.value,\n        style: visuallyHiddenStyle,\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault()\n            return\n          }\n\n          const checked = event.currentTarget.checked\n          send({ type: \"CHECKED.SET\", checked, isTrusted: true })\n        },\n      })\n    },\n  }\n}\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./switch.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `switch:${ctx.id}`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `switch:${ctx.id}:label`,\n  getThumbId: (ctx: Ctx) => ctx.ids?.thumb ?? `switch:${ctx.id}:thumb`,\n  getControlId: (ctx: Ctx) => ctx.ids?.control ?? `switch:${ctx.id}:control`,\n  getHiddenInputId: (ctx: Ctx) => ctx.ids?.hiddenInput ?? `switch:${ctx.id}:input`,\n\n  getRootEl: (ctx: Ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getHiddenInputEl: (ctx: Ctx) => dom.getById<HTMLInputElement>(ctx, dom.getHiddenInputId(ctx)),\n})\n","import { createMachine, guards } from \"@zag-js/core\"\nimport { trackFocusVisible, trackPress } from \"@zag-js/dom-event\"\nimport { dispatchInputCheckedEvent, trackFormControl } from \"@zag-js/form-utils\"\nimport { compact, isEqual } from \"@zag-js/utils\"\nimport { dom } from \"./switch.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./switch.types\"\n\nconst { not } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"switch\",\n      initial: \"ready\",\n\n      context: {\n        checked: false,\n        label: \"switch\",\n        value: \"on\",\n        disabled: false,\n        ...ctx,\n        fieldsetDisabled: false,\n      },\n\n      computed: {\n        isDisabled: (ctx) => ctx.disabled || ctx.fieldsetDisabled,\n      },\n\n      watch: {\n        disabled: \"removeFocusIfNeeded\",\n        checked: \"syncInputElement\",\n      },\n\n      activities: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n\n      on: {\n        \"CHECKED.TOGGLE\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"toggleChecked\", \"dispatchChangeEvent\"],\n          },\n          {\n            actions: [\"toggleChecked\"],\n          },\n        ],\n        \"CHECKED.SET\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setChecked\", \"dispatchChangeEvent\"],\n          },\n          {\n            actions: [\"setChecked\"],\n          },\n        ],\n        \"CONTEXT.SET\": {\n          actions: [\"setContext\"],\n        },\n      },\n\n      states: {\n        ready: {},\n      },\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted,\n      },\n      activities: {\n        trackPressEvent(ctx) {\n          if (ctx.isDisabled) return\n          return trackPress({\n            pointerNode: dom.getRootEl(ctx),\n            keyboardNode: dom.getHiddenInputEl(ctx),\n            isValidKey: (event) => event.key === \" \",\n            onPress: () => (ctx.active = false),\n            onPressStart: () => (ctx.active = true),\n            onPressEnd: () => (ctx.active = false),\n          })\n        },\n        trackFocusVisible(ctx) {\n          if (ctx.isDisabled) return\n          return trackFocusVisible(dom.getHiddenInputEl(ctx), {\n            onFocus: () => (ctx.focused = true),\n            onBlur: () => (ctx.focused = false),\n          })\n        },\n        trackFormControlState(ctx, _evt, { send, initialContext }) {\n          return trackFormControl(dom.getHiddenInputEl(ctx), {\n            onFieldsetDisabledChange(disabled) {\n              ctx.fieldsetDisabled = disabled\n            },\n            onFormReset() {\n              send({ type: \"CHECKED.SET\", checked: !!initialContext.checked, src: \"form-reset\" })\n            },\n          })\n        },\n      },\n\n      actions: {\n        setContext(ctx, evt) {\n          Object.assign(ctx, evt.context)\n        },\n        syncInputElement(ctx) {\n          const inputEl = dom.getHiddenInputEl(ctx)\n          if (!inputEl) return\n          inputEl.checked = !!ctx.checked\n        },\n        removeFocusIfNeeded(ctx) {\n          if (ctx.disabled && ctx.focused) {\n            ctx.focused = false\n          }\n        },\n        setChecked(ctx, evt) {\n          set.checked(ctx, evt.checked)\n        },\n        toggleChecked(ctx, _evt) {\n          set.checked(ctx, !ctx.checked)\n        },\n        dispatchChangeEvent(ctx) {\n          const inputEl = dom.getHiddenInputEl(ctx)\n          dispatchInputCheckedEvent(inputEl, { checked: ctx.checked })\n        },\n      },\n    },\n  )\n}\n\nconst invoke = {\n  change: (ctx: MachineContext) => {\n    ctx.onCheckedChange?.({ checked: ctx.checked })\n  },\n}\n\nconst set = {\n  checked: (ctx: MachineContext, checked: boolean) => {\n    if (isEqual(ctx.checked, checked)) return\n    ctx.checked = checked\n    invoke.change(ctx)\n  },\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { UserDefinedContext } from \"./switch.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"checked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"label\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n"],"mappings":"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","names":["checked","ctx"]}