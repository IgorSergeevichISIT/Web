{"version":3,"sources":["../src/index.ts"],"sourcesContent":["type Fn = (rect: Rect) => void\n\ninterface Rect {\n  top: number\n  left: number\n  width: number\n  height: number\n}\n\ninterface ObservedData {\n  rect: Rect\n  callbacks: Fn[]\n}\n\nlet rafId: number\n\nconst observedElements = new Map<HTMLElement, ObservedData>()\n\ntype TrackScope = \"size\" | \"position\" | \"rect\"\n\nexport type ElementRectOptions = {\n  onChange: (rect: Rect) => void\n  scope?: TrackScope\n  getRect?: (el: HTMLElement) => Rect\n}\n\nconst getRectFn = (el: HTMLElement) => el.getBoundingClientRect()\n\nexport function trackElementRect(el: HTMLElement, options: ElementRectOptions) {\n  const { scope = \"rect\", getRect = getRectFn, onChange } = options\n  const loop = getLoopFn({ scope, getRect })\n\n  const data = observedElements.get(el)\n\n  if (!data) {\n    observedElements.set(el, {\n      rect: {} as Rect,\n      callbacks: [onChange],\n    })\n\n    if (observedElements.size === 1) {\n      rafId = requestAnimationFrame(loop)\n    }\n  } else {\n    data.callbacks.push(onChange)\n    onChange(getRect(el))\n  }\n\n  return function unobserve() {\n    const data = observedElements.get(el)\n    if (!data) return\n\n    const index = data.callbacks.indexOf(onChange)\n    if (index > -1) {\n      data.callbacks.splice(index, 1)\n    }\n\n    if (data.callbacks.length === 0) {\n      observedElements.delete(el)\n\n      if (observedElements.size === 0) {\n        cancelAnimationFrame(rafId)\n      }\n    }\n  }\n}\n\nfunction getLoopFn(options: Required<Omit<ElementRectOptions, \"onChange\">>) {\n  const { scope, getRect } = options\n  const isEqual = getEqualityFn(scope)\n  return function loop() {\n    const changedRectsData: Array<ObservedData> = []\n\n    observedElements.forEach((data, element) => {\n      const newRect = getRect(element)\n\n      if (!isEqual(data.rect, newRect)) {\n        data.rect = newRect\n        changedRectsData.push(data)\n      }\n    })\n\n    changedRectsData.forEach((data) => {\n      data.callbacks.forEach((callback) => callback(data.rect))\n    })\n\n    rafId = requestAnimationFrame(loop)\n  }\n}\n\nconst isEqualSize = (a: Rect, b: Rect) => a.width === b.width && a.height === b.height\n\nconst isEqualPosition = (a: Rect, b: Rect) => a.top === b.top && a.left === b.left\n\nconst isEqualRect = (a: Rect, b: Rect) => isEqualSize(a, b) && isEqualPosition(a, b)\n\nfunction getEqualityFn(scope: TrackScope) {\n  if (scope === \"size\") return isEqualSize\n  if (scope === \"position\") return isEqualPosition\n  return isEqualRect\n}\n"],"mappings":";AAcA,IAAI;AAEJ,IAAM,mBAAmB,oBAAI,IAA+B;AAU5D,IAAM,YAAY,CAAC,OAAoB,GAAG,sBAAsB;AAEzD,SAAS,iBAAiB,IAAiB,SAA6B;AAC7E,QAAM,EAAE,QAAQ,QAAQ,UAAU,WAAW,SAAS,IAAI;AAC1D,QAAM,OAAO,UAAU,EAAE,OAAO,QAAQ,CAAC;AAEzC,QAAM,OAAO,iBAAiB,IAAI,EAAE;AAEpC,MAAI,CAAC,MAAM;AACT,qBAAiB,IAAI,IAAI;AAAA,MACvB,MAAM,CAAC;AAAA,MACP,WAAW,CAAC,QAAQ;AAAA,IACtB,CAAC;AAED,QAAI,iBAAiB,SAAS,GAAG;AAC/B,cAAQ,sBAAsB,IAAI;AAAA,IACpC;AAAA,EACF,OAAO;AACL,SAAK,UAAU,KAAK,QAAQ;AAC5B,aAAS,QAAQ,EAAE,CAAC;AAAA,EACtB;AAEA,SAAO,SAAS,YAAY;AAC1B,UAAMA,QAAO,iBAAiB,IAAI,EAAE;AACpC,QAAI,CAACA,MAAM;AAEX,UAAM,QAAQA,MAAK,UAAU,QAAQ,QAAQ;AAC7C,QAAI,QAAQ,IAAI;AACd,MAAAA,MAAK,UAAU,OAAO,OAAO,CAAC;AAAA,IAChC;AAEA,QAAIA,MAAK,UAAU,WAAW,GAAG;AAC/B,uBAAiB,OAAO,EAAE;AAE1B,UAAI,iBAAiB,SAAS,GAAG;AAC/B,6BAAqB,KAAK;AAAA,MAC5B;AAAA,IACF;AAAA,EACF;AACF;AAEA,SAAS,UAAU,SAAyD;AAC1E,QAAM,EAAE,OAAO,QAAQ,IAAI;AAC3B,QAAM,UAAU,cAAc,KAAK;AACnC,SAAO,SAAS,OAAO;AACrB,UAAM,mBAAwC,CAAC;AAE/C,qBAAiB,QAAQ,CAAC,MAAM,YAAY;AAC1C,YAAM,UAAU,QAAQ,OAAO;AAE/B,UAAI,CAAC,QAAQ,KAAK,MAAM,OAAO,GAAG;AAChC,aAAK,OAAO;AACZ,yBAAiB,KAAK,IAAI;AAAA,MAC5B;AAAA,IACF,CAAC;AAED,qBAAiB,QAAQ,CAAC,SAAS;AACjC,WAAK,UAAU,QAAQ,CAAC,aAAa,SAAS,KAAK,IAAI,CAAC;AAAA,IAC1D,CAAC;AAED,YAAQ,sBAAsB,IAAI;AAAA,EACpC;AACF;AAEA,IAAM,cAAc,CAAC,GAAS,MAAY,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE;AAEhF,IAAM,kBAAkB,CAAC,GAAS,MAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE;AAE9E,IAAM,cAAc,CAAC,GAAS,MAAY,YAAY,GAAG,CAAC,KAAK,gBAAgB,GAAG,CAAC;AAEnF,SAAS,cAAc,OAAmB;AACxC,MAAI,UAAU,OAAQ,QAAO;AAC7B,MAAI,UAAU,WAAY,QAAO;AACjC,SAAO;AACT;","names":["data"]}