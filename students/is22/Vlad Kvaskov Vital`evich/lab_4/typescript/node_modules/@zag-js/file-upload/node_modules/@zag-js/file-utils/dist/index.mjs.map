{"version":3,"sources":["../src/data-url-to-blob.ts","../src/download-file.ts","../src/get-accept-attr.ts","../src/get-file-data-url.ts","../src/get-total-file-size.ts","../src/is-file-equal.ts","../src/is-valid-file-size.ts","../src/is-valid-file-type.ts"],"sourcesContent":["export function dataURItoBlob(uri: string): Blob {\n  const binary = atob(uri.split(\",\")[1])\n\n  // separate out the mime component\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0]\n\n  // write the bytes of the string to an ArrayBuffer\n  const buffer = new ArrayBuffer(binary.length)\n\n  // create a view into the buffer\n  const intArray = new Uint8Array(buffer)\n\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i)\n  }\n\n  return new Blob([buffer], { type: mimeString })\n}\n","export function isMSEdge(win: Window): win is Window & { navigator: { msSaveOrOpenBlob: Function } } {\n  // @ts-ignore\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob)\n}\n\ninterface DownloadFileOptions {\n  /**\n   * The name of the file\n   */\n  name?: string\n  /**\n   * The MIME type of the file\n   */\n  type?: string\n  /**\n   * The file contents\n   */\n  file: File | Blob | string\n  /**\n   * The window environment\n   */\n  win: typeof window\n}\n\nexport function downloadFile(options: DownloadFileOptions) {\n  const { file, win, type, name } = options\n\n  const doc = win.document\n\n  const obj = typeof file === \"string\" ? new Blob([file], { type }) : file\n  const fileName = typeof file === \"string\" ? name : file instanceof File ? file.name : undefined\n\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(obj, fileName || \"file-download\")\n    return\n  }\n\n  const url = win.URL.createObjectURL(obj)\n\n  const anchor = doc.createElement(\"a\")\n  anchor.style.display = \"none\"\n  anchor.href = url\n  anchor.rel = \"noopener\"\n  anchor.download = fileName || \"file-download\"\n\n  doc.documentElement.appendChild(anchor)\n  anchor.click()\n\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url)\n    anchor.remove()\n  }, 0)\n}\n","function isMIMEType(v: string) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v)\n}\n\nfunction isExt(v: string) {\n  return /^.*\\.[\\w]+$/.test(v)\n}\n\nconst isValidMIME = (v: string) => isMIMEType(v) || isExt(v)\n\nexport function getAcceptAttrString(accept: Record<string, string[]> | string | string[] | undefined) {\n  if (!accept) return\n\n  if (typeof accept === \"string\") {\n    return accept\n  }\n\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\")\n  }\n\n  return Object.entries(accept)\n    .reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], [] as string[])\n    .filter(isValidMIME)\n    .join(\",\")\n}\n","export const getFileDataUrl = async (file: File | Blob) => {\n  const reader = new FileReader()\n  return new Promise<string | undefined>((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort()\n      reject(new Error(\"There was an error reading a file\"))\n    }\n\n    reader.onloadend = () => {\n      const { result } = reader\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"))\n      } else {\n        resolve(result || undefined)\n      }\n    }\n\n    reader.readAsDataURL(file)\n  })\n}\n","export const getTotalFileSize = (files: File[]) => {\n  return files.reduce((acc, file) => acc + file.size, 0)\n}\n","export const isFileEqual = (file1: File, file2: File) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type\n}\n","import type { FileError } from \"./types\"\n\nconst isDefined = <T>(v: T | undefined): v is T => v !== undefined && v !== null\n\nexport function isValidFileSize(file: File, minSize?: number, maxSize?: number): [boolean, FileError | null] {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"]\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"]\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"]\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"]\n    }\n  }\n  return [true, null]\n}\n","import type { FileError } from \"./types\"\n\nfunction isFileAccepted(file: File | null, accept: string[] | string | undefined) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : accept.split(\",\")\n\n    const fileName = file.name || \"\"\n    const mimeType = (file.type || \"\").toLowerCase()\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\")\n\n    return types.some((type) => {\n      const validType = type.trim().toLowerCase()\n\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType)\n      }\n\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\")\n      }\n\n      return mimeType === validType\n    })\n  }\n  return true\n}\n\nexport function isValidFileType(file: File, accept: string | undefined): [boolean, FileError | null] {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept)\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"]\n}\n"],"mappings":"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","names":[]}