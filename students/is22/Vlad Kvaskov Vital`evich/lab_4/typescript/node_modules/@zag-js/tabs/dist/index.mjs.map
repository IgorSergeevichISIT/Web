{"version":3,"sources":["../src/tabs.anatomy.ts","../src/tabs.connect.ts","../src/tabs.dom.ts","../src/tabs.machine.ts","../src/tabs.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"tabs\").parts(\"root\", \"list\", \"trigger\", \"content\", \"indicator\")\nexport const parts = anatomy.build()\n","import { getEventKey, type EventKeyMap } from \"@zag-js/dom-event\"\nimport { dataAttr, isComposingEvent, isSafari, isSelfTarget } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./tabs.anatomy\"\nimport { dom } from \"./tabs.dom\"\nimport type { MachineApi, Send, State, TriggerProps, TriggerState } from \"./tabs.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const translations = state.context.translations\n  const focused = state.matches(\"focused\")\n\n  const isVertical = state.context.orientation === \"vertical\"\n  const isHorizontal = state.context.orientation === \"horizontal\"\n  const composite = state.context.composite\n  const indicator = state.context.indicatorState\n\n  function getTriggerState(props: TriggerProps): TriggerState {\n    return {\n      selected: state.context.value === props.value,\n      focused: state.context.focusedValue === props.value,\n      disabled: !!props.disabled,\n    }\n  }\n\n  return {\n    value: state.context.value,\n    focusedValue: state.context.focusedValue,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value })\n    },\n    clearValue() {\n      send({ type: \"CLEAR_VALUE\" })\n    },\n    setIndicatorRect(value) {\n      const id = dom.getTriggerId(state.context, value)\n      send({ type: \"SET_INDICATOR_RECT\", id })\n    },\n    syncTabIndex() {\n      send(\"SYNC_TAB_INDEX\")\n    },\n    selectNext(fromValue) {\n      send({ type: \"TAB_FOCUS\", value: fromValue, src: \"selectNext\" })\n      send({ type: \"ARROW_NEXT\", src: \"selectNext\" })\n    },\n    selectPrev(fromValue) {\n      send({ type: \"TAB_FOCUS\", value: fromValue, src: \"selectPrev\" })\n      send({ type: \"ARROW_PREV\", src: \"selectPrev\" })\n    },\n    focus() {\n      dom.getSelectedTriggerEl(state.context)?.focus()\n    },\n\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused),\n        dir: state.context.dir,\n      })\n    },\n\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        id: dom.getListId(state.context),\n        role: \"tablist\",\n        dir: state.context.dir,\n        \"data-focus\": dataAttr(focused),\n        \"aria-orientation\": state.context.orientation,\n        \"data-orientation\": state.context.orientation,\n        \"aria-label\": translations?.listLabel,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return\n\n          if (!isSelfTarget(event)) return\n          if (isComposingEvent(event)) return\n\n          const keyMap: EventKeyMap = {\n            ArrowDown() {\n              if (isHorizontal) return\n              send({ type: \"ARROW_NEXT\", key: \"ArrowDown\" })\n            },\n            ArrowUp() {\n              if (isHorizontal) return\n              send({ type: \"ARROW_PREV\", key: \"ArrowUp\" })\n            },\n            ArrowLeft() {\n              if (isVertical) return\n              send({ type: \"ARROW_PREV\", key: \"ArrowLeft\" })\n            },\n            ArrowRight() {\n              if (isVertical) return\n              send({ type: \"ARROW_NEXT\", key: \"ArrowRight\" })\n            },\n            Home() {\n              send(\"HOME\")\n            },\n            End() {\n              send(\"END\")\n            },\n            Enter() {\n              send({ type: \"ENTER\" })\n            },\n          }\n\n          let key = getEventKey(event, state.context)\n          const exec = keyMap[key]\n\n          if (exec) {\n            event.preventDefault()\n            exec(event)\n          }\n        },\n      })\n    },\n\n    getTriggerState,\n\n    getTriggerProps(props) {\n      const { value, disabled } = props\n      const triggerState = getTriggerState(props)\n\n      return normalize.button({\n        ...parts.trigger.attrs,\n        role: \"tab\",\n        type: \"button\",\n        disabled,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(disabled),\n        \"aria-disabled\": disabled,\n        \"data-value\": value,\n        \"aria-selected\": triggerState.selected,\n        \"data-selected\": dataAttr(triggerState.selected),\n        \"data-focus\": dataAttr(triggerState.focused),\n        \"aria-controls\": triggerState.selected ? dom.getContentId(state.context, value) : undefined,\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-ssr\": dataAttr(state.context.ssr),\n        id: dom.getTriggerId(state.context, value),\n        tabIndex: triggerState.selected && composite ? 0 : -1,\n        onFocus() {\n          send({ type: \"TAB_FOCUS\", value })\n        },\n        onBlur(event) {\n          const target = event.relatedTarget as HTMLElement | null\n          if (target?.getAttribute(\"role\") !== \"tab\") {\n            send({ type: \"TAB_BLUR\" })\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return\n          if (disabled) return\n          if (isSafari()) {\n            event.currentTarget.focus()\n          }\n          send({ type: \"TAB_CLICK\", value })\n        },\n      })\n    },\n\n    getContentProps(props) {\n      const { value } = props\n      const selected = state.context.value === value\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context, value),\n        tabIndex: composite ? 0 : -1,\n        \"aria-labelledby\": dom.getTriggerId(state.context, value),\n        role: \"tabpanel\",\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-selected\": dataAttr(selected),\n        \"data-orientation\": state.context.orientation,\n        hidden: !selected,\n      })\n    },\n\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, right, top, bottom, width, height\",\n          \"--left\": indicator.rect?.left,\n          \"--top\": indicator.rect?.top,\n          \"--width\": indicator.rect?.width,\n          \"--height\": indicator.rect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: indicator.transition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [isHorizontal ? \"left\" : \"top\"]: isHorizontal ? \"var(--left)\" : \"var(--top)\",\n        },\n      })\n    },\n  }\n}\n","import { createScope, itemById, nextById, prevById, queryAll } from \"@zag-js/dom-query\"\nimport { first, last } from \"@zag-js/utils\"\nimport type { MachineContext as Ctx } from \"./tabs.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `tabs:${ctx.id}`,\n  getListId: (ctx: Ctx) => ctx.ids?.list ?? `tabs:${ctx.id}:list`,\n  getContentId: (ctx: Ctx, id: string) => ctx.ids?.content ?? `tabs:${ctx.id}:content-${id}`,\n  getTriggerId: (ctx: Ctx, id: string) => ctx.ids?.trigger ?? `tabs:${ctx.id}:trigger-${id}`,\n  getIndicatorId: (ctx: Ctx) => ctx.ids?.indicator ?? `tabs:${ctx.id}:indicator`,\n\n  getListEl: (ctx: Ctx) => dom.getById(ctx, dom.getListId(ctx)),\n  getContentEl: (ctx: Ctx, id: string) => dom.getById(ctx, dom.getContentId(ctx, id)),\n  getTriggerEl: (ctx: Ctx, id: string) => dom.getById(ctx, dom.getTriggerId(ctx, id)),\n  getIndicatorEl: (ctx: Ctx) => dom.getById(ctx, dom.getIndicatorId(ctx)),\n\n  getElements: (ctx: Ctx) => {\n    const ownerId = CSS.escape(dom.getListId(ctx))\n    const selector = `[role=tab][data-ownedby='${ownerId}']:not([disabled])`\n    return queryAll(dom.getListEl(ctx), selector)\n  },\n\n  getFirstTriggerEl: (ctx: Ctx) => first(dom.getElements(ctx)),\n  getLastTriggerEl: (ctx: Ctx) => last(dom.getElements(ctx)),\n  getNextTriggerEl: (ctx: Ctx, id: string) => nextById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getPrevTriggerEl: (ctx: Ctx, id: string) => prevById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getSelectedContentEl: (ctx: Ctx) => {\n    if (!ctx.value) return\n    return dom.getContentEl(ctx, ctx.value)\n  },\n  getSelectedTriggerEl: (ctx: Ctx) => {\n    if (!ctx.value) return\n    return dom.getTriggerEl(ctx, ctx.value)\n  },\n\n  getOffsetRect: (el: HTMLElement | undefined) => {\n    return {\n      left: el?.offsetLeft ?? 0,\n      top: el?.offsetTop ?? 0,\n      width: el?.offsetWidth ?? 0,\n      height: el?.offsetHeight ?? 0,\n    }\n  },\n\n  getRectById: (ctx: Ctx, id: string) => {\n    const tab = itemById(dom.getElements(ctx), dom.getTriggerId(ctx, id))\n    return dom.resolveRect(dom.getOffsetRect(tab))\n  },\n\n  resolveRect: (rect: Record<\"width\" | \"height\" | \"left\" | \"top\", number>) => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`,\n  }),\n})\n","import { createMachine, guards } from \"@zag-js/core\"\nimport { clickIfLink } from \"@zag-js/dom-event\"\nimport { nextTick, raf, getFocusables } from \"@zag-js/dom-query\"\nimport { trackElementRect } from \"@zag-js/element-rect\"\nimport { compact, isEqual } from \"@zag-js/utils\"\nimport { dom } from \"./tabs.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./tabs.types\"\n\nconst { not } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      initial: \"idle\",\n\n      context: {\n        dir: \"ltr\",\n        orientation: \"horizontal\",\n        activationMode: \"automatic\",\n        value: null,\n        loopFocus: true,\n        composite: true,\n        ...ctx,\n        focusedValue: ctx.value ?? null,\n        ssr: true,\n        indicatorState: {\n          rendered: false,\n          transition: false,\n          rect: { left: \"0px\", top: \"0px\", width: \"0px\", height: \"0px\" },\n        },\n      },\n\n      watch: {\n        value: [\"allowIndicatorTransition\", \"syncIndicatorRect\", \"syncTabIndex\", \"clickIfLink\"],\n        dir: [\"syncIndicatorRect\"],\n        orientation: [\"syncIndicatorRect\"],\n      },\n\n      on: {\n        SET_VALUE: {\n          actions: \"setValue\",\n        },\n        CLEAR_VALUE: {\n          actions: \"clearValue\",\n        },\n        SET_INDICATOR_RECT: {\n          actions: \"setIndicatorRect\",\n        },\n        SYNC_TAB_INDEX: {\n          actions: \"syncTabIndex\",\n        },\n      },\n\n      created: [\"syncFocusedValue\"],\n\n      entry: [\"checkRenderedElements\", \"syncIndicatorRect\", \"syncTabIndex\", \"syncSsr\"],\n\n      exit: [\"cleanupObserver\"],\n\n      states: {\n        idle: {\n          on: {\n            TAB_FOCUS: {\n              target: \"focused\",\n              actions: \"setFocusedValue\",\n            },\n            TAB_CLICK: {\n              target: \"focused\",\n              actions: [\"setFocusedValue\", \"setValue\"],\n            },\n          },\n        },\n        focused: {\n          on: {\n            TAB_CLICK: {\n              target: \"focused\",\n              actions: [\"setFocusedValue\", \"setValue\"],\n            },\n            ARROW_PREV: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusPrevTab\", \"selectFocusedTab\"],\n              },\n              {\n                actions: \"focusPrevTab\",\n              },\n            ],\n            ARROW_NEXT: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusNextTab\", \"selectFocusedTab\"],\n              },\n              {\n                actions: \"focusNextTab\",\n              },\n            ],\n            HOME: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusFirstTab\", \"selectFocusedTab\"],\n              },\n              {\n                actions: \"focusFirstTab\",\n              },\n            ],\n            END: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusLastTab\", \"selectFocusedTab\"],\n              },\n              {\n                actions: \"focusLastTab\",\n              },\n            ],\n            ENTER: {\n              guard: not(\"selectOnFocus\"),\n              actions: \"selectFocusedTab\",\n            },\n            TAB_FOCUS: {\n              actions: [\"setFocusedValue\"],\n            },\n            TAB_BLUR: {\n              target: \"idle\",\n              actions: \"clearFocusedValue\",\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        selectOnFocus: (ctx) => ctx.activationMode === \"automatic\",\n      },\n\n      actions: {\n        syncFocusedValue(ctx) {\n          if (ctx.value != null && ctx.focusedValue == null) {\n            ctx.focusedValue = ctx.value\n          }\n        },\n        selectFocusedTab(ctx) {\n          raf(() => {\n            set.value(ctx, ctx.focusedValue)\n          })\n        },\n        setFocusedValue(ctx, evt) {\n          if (evt.value == null) return\n          set.focusedValue(ctx, evt.value)\n        },\n        clearFocusedValue(ctx) {\n          set.focusedValue(ctx, null)\n        },\n        setValue(ctx, evt) {\n          set.value(ctx, evt.value)\n        },\n        clearValue(ctx) {\n          set.value(ctx, null)\n        },\n        focusFirstTab(ctx) {\n          raf(() => {\n            dom.getFirstTriggerEl(ctx)?.focus()\n          })\n        },\n        focusLastTab(ctx) {\n          raf(() => {\n            dom.getLastTriggerEl(ctx)?.focus()\n          })\n        },\n        focusNextTab(ctx) {\n          if (!ctx.focusedValue) return\n          const triggerEl = dom.getNextTriggerEl(ctx, ctx.focusedValue)\n          raf(() => {\n            if (ctx.composite) {\n              triggerEl?.focus()\n            } else if (triggerEl?.dataset.value != null) {\n              set.focusedValue(ctx, triggerEl.dataset.value)\n            }\n          })\n        },\n        focusPrevTab(ctx) {\n          if (!ctx.focusedValue) return\n          const triggerEl = dom.getPrevTriggerEl(ctx, ctx.focusedValue)\n          raf(() => {\n            if (ctx.composite) {\n              triggerEl?.focus()\n            } else if (triggerEl?.dataset.value != null) {\n              set.focusedValue(ctx, triggerEl.dataset.value)\n            }\n          })\n        },\n        checkRenderedElements(ctx) {\n          ctx.indicatorState.rendered = !!dom.getIndicatorEl(ctx)\n        },\n        syncTabIndex(ctx) {\n          raf(() => {\n            const contentEl = dom.getSelectedContentEl(ctx)\n            if (!contentEl) return\n            const focusables = getFocusables(contentEl)\n            if (focusables.length > 0) {\n              contentEl.removeAttribute(\"tabindex\")\n            } else {\n              contentEl.setAttribute(\"tabindex\", \"0\")\n            }\n          })\n        },\n        cleanupObserver(ctx) {\n          ctx.indicatorCleanup?.()\n        },\n        allowIndicatorTransition(ctx) {\n          ctx.indicatorState.transition = true\n        },\n        setIndicatorRect(ctx, evt) {\n          const value = evt.id ?? ctx.value\n          if (!ctx.indicatorState.rendered || !value) return\n\n          const triggerEl = dom.getTriggerEl(ctx, value)\n          if (!triggerEl) return\n\n          ctx.indicatorState.rect = dom.getRectById(ctx, value)\n          nextTick(() => {\n            ctx.indicatorState.transition = false\n          })\n        },\n        syncSsr(ctx) {\n          ctx.ssr = false\n        },\n        syncIndicatorRect(ctx) {\n          ctx.indicatorCleanup?.()\n\n          const value = ctx.value\n          if (!ctx.indicatorState.rendered || !value) return\n\n          const triggerEl = dom.getSelectedTriggerEl(ctx)\n          if (!triggerEl) return\n\n          ctx.indicatorCleanup = trackElementRect(triggerEl, {\n            getRect(el) {\n              return dom.getOffsetRect(el)\n            },\n            onChange(rect) {\n              ctx.indicatorState.rect = dom.resolveRect(rect)\n              nextTick(() => {\n                ctx.indicatorState.transition = false\n              })\n            },\n          })\n        },\n        clickIfLink(ctx) {\n          clickIfLink(dom.getSelectedTriggerEl(ctx))\n        },\n      },\n    },\n  )\n}\n\nconst invoke = {\n  change: (ctx: MachineContext) => {\n    if (ctx.value == null) return\n    ctx.onValueChange?.({ value: ctx.value })\n  },\n  focusChange: (ctx: MachineContext) => {\n    if (ctx.focusedValue == null) return\n    ctx.onFocusChange?.({ focusedValue: ctx.focusedValue })\n  },\n}\n\nconst set = {\n  value: (ctx: MachineContext, value: string | null) => {\n    if (isEqual(value, ctx.value)) return\n    ctx.value = value\n    invoke.change(ctx)\n  },\n  focusedValue: (ctx: MachineContext, value: string | null) => {\n    if (isEqual(value, ctx.focusedValue)) return\n    ctx.focusedValue = value\n    invoke.focusChange(ctx)\n  },\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { ContentProps, TriggerProps, UserDefinedContext } from \"./tabs.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"activationMode\",\n  \"composite\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n\nexport const triggerProps = createProps<TriggerProps>()([\"disabled\", \"value\"])\nexport const splitTriggerProps = createSplitProps<TriggerProps>(triggerProps)\n\nexport const contentProps = createProps<ContentProps>()([\"value\"])\nexport const splitContentProps = createSplitProps<ContentProps>(contentProps)\n"],"mappings":"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","names":["props","ctx"]}