{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { isIos, nextTick, raf } from \"@zag-js/dom-query\"\n\ntype State = \"default\" | \"disabled\" | \"restoring\"\n\nlet state: State = \"default\"\nlet userSelect = \"\"\nconst elementMap = new WeakMap<HTMLElement, string>()\n\nexport interface DisableTextSelectionOptions<T = MaybeElement> {\n  target?: T\n  doc?: Document\n  defer?: boolean\n}\n\nfunction disableTextSelectionImpl(options: DisableTextSelectionOptions = {}) {\n  const { target, doc } = options\n\n  const docNode = doc ?? document\n  const rootEl = docNode.documentElement\n\n  if (isIos()) {\n    if (state === \"default\") {\n      userSelect = rootEl.style.webkitUserSelect\n      rootEl.style.webkitUserSelect = \"none\"\n    }\n\n    state = \"disabled\"\n  } else if (target) {\n    elementMap.set(target, target.style.userSelect)\n    target.style.userSelect = \"none\"\n  }\n\n  return () => restoreTextSelection({ target, doc: docNode })\n}\n\nexport function restoreTextSelection(options: DisableTextSelectionOptions = {}) {\n  const { target, doc } = options\n\n  const docNode = doc ?? document\n  const rootEl = docNode.documentElement\n\n  if (isIos()) {\n    if (state !== \"disabled\") return\n    state = \"restoring\"\n\n    setTimeout(() => {\n      nextTick(() => {\n        if (state === \"restoring\") {\n          if (rootEl.style.webkitUserSelect === \"none\") {\n            rootEl.style.webkitUserSelect = userSelect || \"\"\n          }\n          userSelect = \"\"\n          state = \"default\"\n        }\n      })\n    }, 300)\n  } else {\n    if (target && elementMap.has(target)) {\n      const prevUserSelect = elementMap.get(target)\n\n      if (target.style.userSelect === \"none\") {\n        target.style.userSelect = prevUserSelect ?? \"\"\n      }\n\n      if (target.getAttribute(\"style\") === \"\") {\n        target.removeAttribute(\"style\")\n      }\n      elementMap.delete(target)\n    }\n  }\n}\n\ntype MaybeElement = HTMLElement | null | undefined\n\ntype NodeOrFn = MaybeElement | (() => MaybeElement)\n\nexport function disableTextSelection(options: DisableTextSelectionOptions<NodeOrFn> = {}) {\n  const { defer, target, ...restOptions } = options\n  const func = defer ? raf : (v: any) => v()\n  const cleanups: (VoidFunction | undefined)[] = []\n  cleanups.push(\n    func(() => {\n      const node = typeof target === \"function\" ? target() : target\n      cleanups.push(disableTextSelectionImpl({ ...restOptions, target: node }))\n    }),\n  )\n  return () => {\n    cleanups.forEach((fn) => fn?.())\n  }\n}\n"],"mappings":";AAAA,SAAS,OAAO,UAAU,WAAW;AAIrC,IAAI,QAAe;AACnB,IAAI,aAAa;AACjB,IAAM,aAAa,oBAAI,QAA6B;AAQpD,SAAS,yBAAyB,UAAuC,CAAC,GAAG;AAC3E,QAAM,EAAE,QAAQ,IAAI,IAAI;AAExB,QAAM,UAAU,OAAO;AACvB,QAAM,SAAS,QAAQ;AAEvB,MAAI,MAAM,GAAG;AACX,QAAI,UAAU,WAAW;AACvB,mBAAa,OAAO,MAAM;AAC1B,aAAO,MAAM,mBAAmB;AAAA,IAClC;AAEA,YAAQ;AAAA,EACV,WAAW,QAAQ;AACjB,eAAW,IAAI,QAAQ,OAAO,MAAM,UAAU;AAC9C,WAAO,MAAM,aAAa;AAAA,EAC5B;AAEA,SAAO,MAAM,qBAAqB,EAAE,QAAQ,KAAK,QAAQ,CAAC;AAC5D;AAEO,SAAS,qBAAqB,UAAuC,CAAC,GAAG;AAC9E,QAAM,EAAE,QAAQ,IAAI,IAAI;AAExB,QAAM,UAAU,OAAO;AACvB,QAAM,SAAS,QAAQ;AAEvB,MAAI,MAAM,GAAG;AACX,QAAI,UAAU,WAAY;AAC1B,YAAQ;AAER,eAAW,MAAM;AACf,eAAS,MAAM;AACb,YAAI,UAAU,aAAa;AACzB,cAAI,OAAO,MAAM,qBAAqB,QAAQ;AAC5C,mBAAO,MAAM,mBAAmB,cAAc;AAAA,UAChD;AACA,uBAAa;AACb,kBAAQ;AAAA,QACV;AAAA,MACF,CAAC;AAAA,IACH,GAAG,GAAG;AAAA,EACR,OAAO;AACL,QAAI,UAAU,WAAW,IAAI,MAAM,GAAG;AACpC,YAAM,iBAAiB,WAAW,IAAI,MAAM;AAE5C,UAAI,OAAO,MAAM,eAAe,QAAQ;AACtC,eAAO,MAAM,aAAa,kBAAkB;AAAA,MAC9C;AAEA,UAAI,OAAO,aAAa,OAAO,MAAM,IAAI;AACvC,eAAO,gBAAgB,OAAO;AAAA,MAChC;AACA,iBAAW,OAAO,MAAM;AAAA,IAC1B;AAAA,EACF;AACF;AAMO,SAAS,qBAAqB,UAAiD,CAAC,GAAG;AACxF,QAAM,EAAE,OAAO,QAAQ,GAAG,YAAY,IAAI;AAC1C,QAAM,OAAO,QAAQ,MAAM,CAAC,MAAW,EAAE;AACzC,QAAM,WAAyC,CAAC;AAChD,WAAS;AAAA,IACP,KAAK,MAAM;AACT,YAAM,OAAO,OAAO,WAAW,aAAa,OAAO,IAAI;AACvD,eAAS,KAAK,yBAAyB,EAAE,GAAG,aAAa,QAAQ,KAAK,CAAC,CAAC;AAAA,IAC1E,CAAC;AAAA,EACH;AACA,SAAO,MAAM;AACX,aAAS,QAAQ,CAAC,OAAO,KAAK,CAAC;AAAA,EACjC;AACF;","names":[]}