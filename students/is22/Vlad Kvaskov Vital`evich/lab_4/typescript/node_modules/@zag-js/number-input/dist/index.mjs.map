{"version":3,"sources":["../src/number-input.anatomy.ts","../src/number-input.connect.ts","../src/number-input.dom.ts","../src/number-input.machine.ts","../src/cursor.ts","../src/number-input.utils.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"numberInput\").parts(\n  \"root\",\n  \"label\",\n  \"input\",\n  \"control\",\n  \"valueText\",\n  \"incrementTrigger\",\n  \"decrementTrigger\",\n  \"scrubber\",\n)\n\nexport const parts = anatomy.build()\n","import { getEventPoint, getEventStep, isLeftClick, type EventKeyMap } from \"@zag-js/dom-event\"\nimport { ariaAttr, dataAttr, isComposingEvent } from \"@zag-js/dom-query\"\nimport { roundToDevicePixel } from \"@zag-js/number-utils\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./number-input.anatomy\"\nimport { dom } from \"./number-input.dom\"\nimport type { MachineApi, Send, State } from \"./number-input.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const focused = state.hasTag(\"focus\")\n  const disabled = state.context.isDisabled\n  const readOnly = state.context.readOnly\n\n  const empty = state.context.isValueEmpty\n  const invalid = state.context.isOutOfRange || !!state.context.invalid\n\n  const isIncrementDisabled = disabled || !state.context.canIncrement || readOnly\n  const isDecrementDisabled = disabled || !state.context.canDecrement || readOnly\n\n  const translations = state.context.translations\n\n  return {\n    focused: focused,\n    invalid: invalid,\n    empty: empty,\n    value: state.context.formattedValue,\n    valueAsNumber: state.context.valueAsNumber,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value })\n    },\n    clearValue() {\n      send(\"VALUE.CLEAR\")\n    },\n    increment() {\n      send(\"VALUE.INCREMENT\")\n    },\n    decrement() {\n      send(\"VALUE.DECREMENT\")\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: state.context.max })\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: state.context.min })\n    },\n    focus() {\n      dom.getInputEl(state.context)?.focus()\n    },\n\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n      })\n    },\n\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getInputId(state.context),\n      })\n    },\n\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"aria-invalid\": ariaAttr(state.context.invalid),\n      })\n    },\n\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n      })\n    },\n\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        role: \"spinbutton\",\n        defaultValue: state.context.formattedValue,\n        pattern: state.context.pattern,\n        inputMode: state.context.inputMode,\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": state.context.min,\n        \"aria-valuemax\": state.context.max,\n        \"aria-valuenow\": Number.isNaN(state.context.valueAsNumber) ? undefined : state.context.valueAsNumber,\n        \"aria-valuetext\": state.context.valueText,\n        onFocus() {\n          send(\"INPUT.FOCUS\")\n        },\n        onBlur() {\n          send({ type: \"INPUT.COMMIT\", src: \"blur\" })\n        },\n        onChange(event) {\n          send({ type: \"INPUT.CHANGE\", target: event.currentTarget, hint: \"set\" })\n        },\n        onBeforeInput(event) {\n          try {\n            const { selectionStart, selectionEnd, value } = event.currentTarget\n\n            const nextValue = value.slice(0, selectionStart!) + ((event as any).data ?? \"\") + value.slice(selectionEnd!)\n            const isValid = state.context.parser.isValidPartialNumber(nextValue)\n\n            if (!isValid) {\n              event.preventDefault()\n            }\n          } catch {\n            // noop\n          }\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return\n          if (readOnly) return\n          if (isComposingEvent(event)) return\n\n          const step = getEventStep(event) * state.context.step\n\n          const keyMap: EventKeyMap = {\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", step })\n              event.preventDefault()\n            },\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", step })\n              event.preventDefault()\n            },\n            Home() {\n              send(\"INPUT.HOME\")\n              event.preventDefault()\n            },\n            End() {\n              send(\"INPUT.END\")\n              event.preventDefault()\n            },\n            Enter() {\n              send({ type: \"INPUT.COMMIT\", src: \"enter\" })\n            },\n          }\n\n          const exec = keyMap[event.key]\n          exec?.(event)\n        },\n      })\n    },\n\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getDecrementTriggerId(state.context),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": dataAttr(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isDecrementDisabled || !isLeftClick(event)) return\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"decrement\", pointerType: event.pointerType })\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault()\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true })\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\", pointerType: event.pointerType })\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\" })\n        },\n      })\n    },\n\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getIncrementTriggerId(state.context),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": dataAttr(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !isLeftClick(event)) return\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"increment\", pointerType: event.pointerType })\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault()\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true })\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType })\n        },\n        onPointerLeave(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType })\n        },\n      })\n    },\n\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        id: dom.getScrubberId(state.context),\n        role: \"presentation\",\n        onMouseDown(event) {\n          if (disabled) return\n\n          const point = getEventPoint(event)\n\n          point.x = point.x - roundToDevicePixel(7.5)\n          point.y = point.y - roundToDevicePixel(7.5)\n\n          send({ type: \"SCRUBBER.PRESS_DOWN\", point })\n          event.preventDefault()\n        },\n        style: {\n          cursor: disabled ? undefined : \"ew-resize\",\n        },\n      })\n    },\n  }\n}\n","import { createScope, isSafari, MAX_Z_INDEX } from \"@zag-js/dom-query\"\nimport { roundToDevicePixel, wrap } from \"@zag-js/number-utils\"\nimport type { MachineContext as Ctx } from \"./number-input.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `number-input:${ctx.id}`,\n  getInputId: (ctx: Ctx) => ctx.ids?.input ?? `number-input:${ctx.id}:input`,\n  getIncrementTriggerId: (ctx: Ctx) => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`,\n  getDecrementTriggerId: (ctx: Ctx) => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`,\n  getScrubberId: (ctx: Ctx) => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`,\n  getCursorId: (ctx: Ctx) => `number-input:${ctx.id}:cursor`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `number-input:${ctx.id}:label`,\n\n  getInputEl: (ctx: Ctx) => dom.getById<HTMLInputElement>(ctx, dom.getInputId(ctx)),\n  getIncrementTriggerEl: (ctx: Ctx) => dom.getById<HTMLButtonElement>(ctx, dom.getIncrementTriggerId(ctx)),\n  getDecrementTriggerEl: (ctx: Ctx) => dom.getById<HTMLButtonElement>(ctx, dom.getDecrementTriggerId(ctx)),\n  getScrubberEl: (ctx: Ctx) => dom.getById(ctx, dom.getScrubberId(ctx)),\n  getCursorEl: (ctx: Ctx) => dom.getDoc(ctx).getElementById(dom.getCursorId(ctx)),\n\n  getPressedTriggerEl: (ctx: Ctx, hint = ctx.hint) => {\n    let btnEl: HTMLButtonElement | null = null\n    if (hint === \"increment\") {\n      btnEl = dom.getIncrementTriggerEl(ctx)\n    }\n    if (hint === \"decrement\") {\n      btnEl = dom.getDecrementTriggerEl(ctx)\n    }\n    return btnEl\n  },\n\n  setupVirtualCursor(ctx: Ctx) {\n    if (isSafari()) return\n    dom.createVirtualCursor(ctx)\n    return () => {\n      dom.getCursorEl(ctx)?.remove()\n    }\n  },\n\n  preventTextSelection(ctx: Ctx) {\n    const doc = dom.getDoc(ctx)\n    const html = doc.documentElement\n    const body = doc.body\n\n    body.style.pointerEvents = \"none\"\n    html.style.userSelect = \"none\"\n    html.style.cursor = \"ew-resize\"\n\n    return () => {\n      body.style.pointerEvents = \"\"\n      html.style.userSelect = \"\"\n      html.style.cursor = \"\"\n      if (!html.style.length) {\n        html.removeAttribute(\"style\")\n      }\n      if (!body.style.length) {\n        body.removeAttribute(\"style\")\n      }\n    }\n  },\n\n  getMousementValue(ctx: Ctx, event: MouseEvent) {\n    const x = roundToDevicePixel(event.movementX)\n    const y = roundToDevicePixel(event.movementY)\n\n    let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null\n\n    if (ctx.isRtl && hint === \"increment\") hint = \"decrement\"\n    if (ctx.isRtl && hint === \"decrement\") hint = \"increment\"\n\n    const point = {\n      x: ctx.scrubberCursorPoint!.x + x,\n      y: ctx.scrubberCursorPoint!.y + y,\n    }\n\n    const win = dom.getWin(ctx)\n    const width = win.innerWidth\n    const half = roundToDevicePixel(7.5)\n    point.x = wrap(point.x + half, width) - half\n\n    return { hint, point }\n  },\n\n  createVirtualCursor(ctx: Ctx) {\n    const doc = dom.getDoc(ctx)\n    const el = doc.createElement(\"div\")\n    el.className = \"scrubber--cursor\"\n    el.id = dom.getCursorId(ctx)\n\n    Object.assign(el.style, {\n      width: \"15px\",\n      height: \"15px\",\n      position: \"fixed\",\n      pointerEvents: \"none\",\n      left: \"0px\",\n      top: \"0px\",\n      zIndex: MAX_Z_INDEX,\n      transform: ctx.scrubberCursorPoint\n        ? `translate3d(${ctx.scrubberCursorPoint.x}px, ${ctx.scrubberCursorPoint.y}px, 0px)`\n        : undefined,\n      willChange: \"transform\",\n    })\n\n    el.innerHTML = `\n        <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n          <g transform=\"translate(2 3)\">\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n          </g>\n        </svg>`\n\n    doc.body.appendChild(el)\n  },\n})\n","import { choose, createMachine, guards } from \"@zag-js/core\"\nimport { addDomEvent, requestPointerLock } from \"@zag-js/dom-event\"\nimport { isSafari, observeAttributes, raf } from \"@zag-js/dom-query\"\nimport { trackFormControl } from \"@zag-js/form-utils\"\nimport { clamp, decrement, increment, isAtMax, isAtMin, isWithinRange } from \"@zag-js/number-utils\"\nimport { callAll, compact, isEqual } from \"@zag-js/utils\"\nimport { recordCursor, restoreCursor } from \"./cursor\"\nimport { dom } from \"./number-input.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./number-input.types\"\nimport { createFormatter, createParser, formatValue, parseValue } from \"./number-input.utils\"\n\nconst { not, and } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"number-input\",\n      initial: \"idle\",\n      context: {\n        dir: \"ltr\",\n        locale: \"en-US\",\n        focusInputOnChange: true,\n        clampValueOnBlur: true,\n        allowOverflow: false,\n        inputMode: \"decimal\",\n        pattern: \"[0-9]*(.[0-9]+)?\",\n        value: \"\",\n        step: 1,\n        min: Number.MIN_SAFE_INTEGER,\n        max: Number.MAX_SAFE_INTEGER,\n        invalid: false,\n        spinOnPress: true,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        hint: null,\n        scrubberCursorPoint: null,\n        fieldsetDisabled: false,\n        formatter: createFormatter(ctx.locale || \"en-US\", ctx.formatOptions),\n        parser: createParser(ctx.locale || \"en-US\", ctx.formatOptions),\n        translations: {\n          incrementLabel: \"increment value\",\n          decrementLabel: \"decrease value\",\n          ...ctx.translations,\n        },\n      },\n\n      computed: {\n        isRtl: (ctx) => ctx.dir === \"rtl\",\n        valueAsNumber: (ctx) => parseValue(ctx, ctx.value),\n        formattedValue: (ctx) => formatValue(ctx, ctx.valueAsNumber),\n        isAtMin: (ctx) => isAtMin(ctx.valueAsNumber, ctx),\n        isAtMax: (ctx) => isAtMax(ctx.valueAsNumber, ctx),\n        isOutOfRange: (ctx) => !isWithinRange(ctx.valueAsNumber, ctx),\n        isValueEmpty: (ctx) => ctx.value === \"\",\n        isDisabled: (ctx) => !!ctx.disabled || ctx.fieldsetDisabled,\n        canIncrement: (ctx) => ctx.allowOverflow || !ctx.isAtMax,\n        canDecrement: (ctx) => ctx.allowOverflow || !ctx.isAtMin,\n        valueText: (ctx) => ctx.translations.valueText?.(ctx.value),\n      },\n\n      watch: {\n        formatOptions: [\"setFormatterAndParser\", \"syncInputElement\"],\n        locale: [\"setFormatterAndParser\", \"syncInputElement\"],\n        value: [\"syncInputElement\"],\n        isOutOfRange: [\"invokeOnInvalid\"],\n        scrubberCursorPoint: [\"setVirtualCursorPosition\"],\n      },\n\n      activities: [\"trackFormControl\"],\n\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setRawValue\", \"setHintToSet\"],\n        },\n        \"VALUE.CLEAR\": {\n          actions: [\"clearValue\"],\n        },\n        \"VALUE.INCREMENT\": {\n          actions: [\"increment\"],\n        },\n        \"VALUE.DECREMENT\": {\n          actions: [\"decrement\"],\n        },\n      },\n\n      states: {\n        idle: {\n          on: {\n            \"TRIGGER.PRESS_DOWN\": [\n              { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n              {\n                target: \"before:spin\",\n                actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"],\n              },\n            ],\n            \"SCRUBBER.PRESS_DOWN\": {\n              target: \"scrubbing\",\n              actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"],\n            },\n            \"INPUT.FOCUS\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"invokeOnFocus\"],\n            },\n          },\n        },\n\n        focused: {\n          tags: \"focus\",\n          activities: \"attachWheelListener\",\n          on: {\n            \"TRIGGER.PRESS_DOWN\": [\n              { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n              { target: \"before:spin\", actions: [\"focusInput\", \"setHint\"] },\n            ],\n            \"SCRUBBER.PRESS_DOWN\": {\n              target: \"scrubbing\",\n              actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"],\n            },\n            \"INPUT.ARROW_UP\": {\n              actions: \"increment\",\n            },\n            \"INPUT.ARROW_DOWN\": {\n              actions: \"decrement\",\n            },\n            \"INPUT.HOME\": {\n              actions: \"decrementToMin\",\n            },\n            \"INPUT.END\": {\n              actions: \"incrementToMax\",\n            },\n            \"INPUT.CHANGE\": {\n              actions: [\"setValue\", \"setHint\"],\n            },\n            \"INPUT.COMMIT\": [\n              {\n                guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n                target: \"idle\",\n                actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"],\n              },\n              {\n                target: \"idle\",\n                actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"],\n              },\n            ],\n          },\n        },\n\n        \"before:spin\": {\n          tags: \"focus\",\n          activities: \"trackButtonDisabled\",\n          entry: choose([\n            { guard: \"isIncrementHint\", actions: \"increment\" },\n            { guard: \"isDecrementHint\", actions: \"decrement\" },\n          ]),\n          after: {\n            CHANGE_DELAY: {\n              target: \"spinning\",\n              guard: and(\"isInRange\", \"spinOnPress\"),\n            },\n          },\n          on: {\n            \"TRIGGER.PRESS_UP\": [\n              { guard: \"isTouchPointer\", target: \"focused\", actions: \"clearHint\" },\n              { target: \"focused\", actions: [\"focusInput\", \"clearHint\"] },\n            ],\n          },\n        },\n\n        spinning: {\n          tags: \"focus\",\n          activities: \"trackButtonDisabled\",\n          every: [\n            {\n              delay: \"CHANGE_INTERVAL\",\n              guard: and(not(\"isAtMin\"), \"isIncrementHint\"),\n              actions: \"increment\",\n            },\n            {\n              delay: \"CHANGE_INTERVAL\",\n              guard: and(not(\"isAtMax\"), \"isDecrementHint\"),\n              actions: \"decrement\",\n            },\n          ],\n          on: {\n            \"TRIGGER.PRESS_UP\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"clearHint\"],\n            },\n          },\n        },\n\n        scrubbing: {\n          tags: \"focus\",\n          activities: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n          on: {\n            \"SCRUBBER.POINTER_UP\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"clearCursorPoint\"],\n            },\n            \"SCRUBBER.POINTER_MOVE\": [\n              {\n                guard: \"isIncrementHint\",\n                actions: [\"increment\", \"setCursorPoint\"],\n              },\n              {\n                guard: \"isDecrementHint\",\n                actions: [\"decrement\", \"setCursorPoint\"],\n              },\n            ],\n          },\n        },\n      },\n    },\n    {\n      delays: {\n        CHANGE_INTERVAL: 50,\n        CHANGE_DELAY: 300,\n      },\n\n      guards: {\n        clampValueOnBlur: (ctx) => ctx.clampValueOnBlur,\n        isAtMin: (ctx) => ctx.isAtMin,\n        spinOnPress: (ctx) => !!ctx.spinOnPress,\n        isAtMax: (ctx) => ctx.isAtMax,\n        isInRange: (ctx) => !ctx.isOutOfRange,\n        isDecrementHint: (ctx, evt) => (evt.hint ?? ctx.hint) === \"decrement\",\n        isIncrementHint: (ctx, evt) => (evt.hint ?? ctx.hint) === \"increment\",\n        isTouchPointer: (_ctx, evt) => evt.pointerType === \"touch\",\n      },\n\n      activities: {\n        trackFormControl(ctx, _evt, { initialContext }) {\n          const inputEl = dom.getInputEl(ctx)\n          return trackFormControl(inputEl, {\n            onFieldsetDisabledChange(disabled) {\n              ctx.fieldsetDisabled = disabled\n            },\n            onFormReset() {\n              set.value(ctx, initialContext.value)\n            },\n          })\n        },\n        setupVirtualCursor(ctx) {\n          return dom.setupVirtualCursor(ctx)\n        },\n        preventTextSelection(ctx) {\n          return dom.preventTextSelection(ctx)\n        },\n        trackButtonDisabled(ctx, _evt, { send }) {\n          const btn = dom.getPressedTriggerEl(ctx, ctx.hint)\n          return observeAttributes(btn, {\n            attributes: [\"disabled\"],\n            callback() {\n              send({ type: \"TRIGGER.PRESS_UP\", src: \"attr\" })\n            },\n          })\n        },\n        attachWheelListener(ctx, _evt, { send }) {\n          const inputEl = dom.getInputEl(ctx)\n          if (!inputEl || !dom.isActiveElement(ctx, inputEl) || !ctx.allowMouseWheel) return\n\n          function onWheel(event: WheelEvent) {\n            event.preventDefault()\n            const dir = Math.sign(event.deltaY) * -1\n            if (dir === 1) {\n              send(\"VALUE.INCREMENT\")\n            } else if (dir === -1) {\n              send(\"VALUE.DECREMENT\")\n            }\n          }\n\n          return addDomEvent(inputEl, \"wheel\", onWheel, { passive: false })\n        },\n        activatePointerLock(ctx) {\n          if (isSafari()) return\n          return requestPointerLock(dom.getDoc(ctx))\n        },\n        trackMousemove(ctx, _evt, { send }) {\n          const doc = dom.getDoc(ctx)\n\n          function onMousemove(event: MouseEvent) {\n            if (!ctx.scrubberCursorPoint) return\n            const value = dom.getMousementValue(ctx, event)\n            if (!value.hint) return\n            send({\n              type: \"SCRUBBER.POINTER_MOVE\",\n              hint: value.hint,\n              point: value.point,\n            })\n          }\n\n          function onMouseup() {\n            send(\"SCRUBBER.POINTER_UP\")\n          }\n\n          return callAll(\n            addDomEvent(doc, \"mousemove\", onMousemove, false),\n            addDomEvent(doc, \"mouseup\", onMouseup, false),\n          )\n        },\n      },\n\n      actions: {\n        focusInput(ctx) {\n          if (!ctx.focusInputOnChange) return\n          const inputEl = dom.getInputEl(ctx)\n          if (dom.isActiveElement(ctx, inputEl)) return\n          raf(() => inputEl?.focus({ preventScroll: true }))\n        },\n        increment(ctx, evt) {\n          const nextValue = increment(ctx.valueAsNumber, evt.step ?? ctx.step)\n          const value = formatValue(ctx, clamp(nextValue, ctx))\n          set.value(ctx, value)\n        },\n        decrement(ctx, evt) {\n          const nextValue = decrement(ctx.valueAsNumber, evt.step ?? ctx.step)\n          const value = formatValue(ctx, clamp(nextValue, ctx))\n          set.value(ctx, value)\n        },\n        setClampedValue(ctx) {\n          const nextValue = clamp(ctx.valueAsNumber, ctx)\n          set.value(ctx, formatValue(ctx, nextValue))\n        },\n        setRawValue(ctx, evt) {\n          const parsedValue = parseValue(ctx, evt.value)\n          const value = formatValue(ctx, clamp(parsedValue, ctx))\n          set.value(ctx, value)\n        },\n        setValue(ctx, evt) {\n          const value = evt.target?.value ?? evt.value\n          set.value(ctx, value)\n        },\n        clearValue(ctx) {\n          set.value(ctx, \"\")\n        },\n        incrementToMax(ctx) {\n          const value = formatValue(ctx, ctx.max)\n          set.value(ctx, value)\n        },\n        decrementToMin(ctx) {\n          const value = formatValue(ctx, ctx.min)\n          set.value(ctx, value)\n        },\n        setHint(ctx, evt) {\n          ctx.hint = evt.hint\n        },\n        clearHint(ctx) {\n          ctx.hint = null\n        },\n        setHintToSet(ctx) {\n          ctx.hint = \"set\"\n        },\n        invokeOnFocus(ctx) {\n          ctx.onFocusChange?.({\n            focused: true,\n            value: ctx.formattedValue,\n            valueAsNumber: ctx.valueAsNumber,\n          })\n        },\n        invokeOnBlur(ctx) {\n          ctx.onFocusChange?.({\n            focused: false,\n            value: ctx.formattedValue,\n            valueAsNumber: ctx.valueAsNumber,\n          })\n        },\n        invokeOnInvalid(ctx) {\n          if (!ctx.isOutOfRange) return\n          const reason = ctx.valueAsNumber > ctx.max ? \"rangeOverflow\" : \"rangeUnderflow\"\n          ctx.onValueInvalid?.({\n            reason,\n            value: ctx.formattedValue,\n            valueAsNumber: ctx.valueAsNumber,\n          })\n        },\n        syncInputElement(ctx, evt) {\n          const value = evt.type.endsWith(\"CHANGE\") ? ctx.value : ctx.formattedValue\n          sync.input(ctx, value)\n        },\n        setFormattedValue(ctx) {\n          set.value(ctx, ctx.formattedValue)\n        },\n        setCursorPoint(ctx, evt) {\n          ctx.scrubberCursorPoint = evt.point\n        },\n        clearCursorPoint(ctx) {\n          ctx.scrubberCursorPoint = null\n        },\n        setVirtualCursorPosition(ctx) {\n          const cursorEl = dom.getCursorEl(ctx)\n          if (!cursorEl || !ctx.scrubberCursorPoint) return\n          const { x, y } = ctx.scrubberCursorPoint\n          cursorEl.style.transform = `translate3d(${x}px, ${y}px, 0px)`\n        },\n        setFormatterAndParser(ctx) {\n          if (!ctx.locale) return\n          ctx.formatter = createFormatter(ctx.locale, ctx.formatOptions)\n          ctx.parser = createParser(ctx.locale, ctx.formatOptions)\n        },\n      },\n      compareFns: {\n        formatOptions: (a, b) => isEqual(a, b),\n        scrubberCursorPoint: (a, b) => isEqual(a, b),\n      },\n    },\n  )\n}\n\nconst sync = {\n  input(ctx: MachineContext, value: string) {\n    const inputEl = dom.getInputEl(ctx)\n    if (!inputEl) return\n\n    // record cursor position before updating input value\n    const sel = recordCursor(inputEl)\n\n    // restore cursor position after updating input value\n    raf(() => {\n      dom.setValue(inputEl, value)\n      restoreCursor(inputEl, sel)\n    })\n  },\n}\n\nconst invoke = {\n  onChange: (ctx: MachineContext) => {\n    ctx.onValueChange?.({\n      value: ctx.value,\n      valueAsNumber: ctx.valueAsNumber,\n    })\n  },\n}\n\nconst set = {\n  value: (ctx: MachineContext, value: string) => {\n    if (isEqual(ctx.value, value)) return\n    ctx.value = value\n    invoke.onChange(ctx)\n  },\n}\n","/**\n * Credits: https://github.com/react-component/input-number/blob/master/src/hooks/useCursor.ts\n */\n\ninterface Selection {\n  start?: number\n  end?: number\n  value?: string\n  beforeTxt?: string\n  afterTxt?: string\n}\n\nexport function recordCursor(inputEl: HTMLInputElement): Selection | undefined {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return\n  try {\n    const { selectionStart: start, selectionEnd: end, value } = inputEl\n    const beforeTxt = value.substring(0, start!)\n    const afterTxt = value.substring(end!)\n    return {\n      start: start!,\n      end: end!,\n      value,\n      beforeTxt,\n      afterTxt,\n    }\n  } catch {}\n}\n\nexport function restoreCursor(inputEl: HTMLInputElement, selection: Selection | undefined) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return\n\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length)\n    return\n  }\n\n  try {\n    const { value } = inputEl\n    const { beforeTxt = \"\", afterTxt = \"\", start } = selection\n\n    let startPos = value.length\n\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1]\n      const newIndex = value.indexOf(beforeLastChar, start - 1)\n      if (newIndex !== -1) {\n        startPos = newIndex + 1\n      }\n    }\n\n    inputEl.setSelectionRange(startPos, startPos)\n  } catch {}\n}\n","import { NumberParser } from \"@internationalized/number\"\nimport { ref } from \"@zag-js/core\"\nimport type { MachineContext } from \"./number-input.types\"\n\nexport const createFormatter = (locale: string, options: Intl.NumberFormatOptions = {}) => {\n  return ref(new Intl.NumberFormat(locale, options))\n}\n\nexport const createParser = (locale: string, options: Intl.NumberFormatOptions = {}) => {\n  return ref(new NumberParser(locale, options))\n}\n\nexport const parseValue = (ctx: MachineContext, value: string) => {\n  if (!ctx.formatOptions) return parseFloat(value)\n  return ctx.parser.parse(String(value))\n}\n\nexport const formatValue = (ctx: MachineContext, value: number): string => {\n  if (Number.isNaN(value)) return \"\"\n  if (!ctx.formatOptions) return value.toString()\n  return ctx.formatter.format(value)\n}\n"],"mappings":"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","names":["roundToDevicePixel","roundToDevicePixel","isSafari","ctx","isSafari"]}