{"version":3,"sources":["../src/dialog.anatomy.ts","../src/dialog.dom.ts","../src/dialog.connect.ts","../src/dialog.machine.ts","../src/dialog.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"dialog\").parts(\n  \"trigger\",\n  \"backdrop\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\",\n)\n\nexport const parts = anatomy.build()\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./dialog.types\"\n\nexport const dom = createScope({\n  getPositionerId: (ctx: Ctx) => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`,\n  getBackdropId: (ctx: Ctx) => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`,\n  getContentId: (ctx: Ctx) => ctx.ids?.content ?? `dialog:${ctx.id}:content`,\n  getTriggerId: (ctx: Ctx) => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`,\n  getTitleId: (ctx: Ctx) => ctx.ids?.title ?? `dialog:${ctx.id}:title`,\n  getDescriptionId: (ctx: Ctx) => ctx.ids?.description ?? `dialog:${ctx.id}:description`,\n  getCloseTriggerId: (ctx: Ctx) => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`,\n\n  getContentEl: (ctx: Ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx: Ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getBackdropEl: (ctx: Ctx) => dom.getById(ctx, dom.getBackdropId(ctx)),\n  getTriggerEl: (ctx: Ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getTitleEl: (ctx: Ctx) => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: (ctx: Ctx) => dom.getById(ctx, dom.getDescriptionId(ctx)),\n  getCloseTriggerEl: (ctx: Ctx) => dom.getById(ctx, dom.getCloseTriggerId(ctx)),\n})\n","import type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./dialog.anatomy\"\nimport { dom } from \"./dialog.dom\"\nimport type { MachineApi, Send, State } from \"./dialog.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const ariaLabel = state.context[\"aria-label\"]\n  const open = state.matches(\"open\")\n  const rendered = state.context.renderedElements\n\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return\n      send(nextOpen ? \"OPEN\" : \"CLOSE\")\n    },\n\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return\n          send(\"TOGGLE\")\n        },\n      })\n    },\n\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: state.context.dir,\n        hidden: !open,\n        id: dom.getBackdropId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\",\n      })\n    },\n\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: {\n          pointerEvents: open ? undefined : \"none\",\n        },\n      })\n    },\n\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        role: state.context.role,\n        hidden: !open,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || undefined,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? undefined : dom.getTitleId(state.context),\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : undefined,\n      })\n    },\n\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: state.context.dir,\n        id: dom.getTitleId(state.context),\n      })\n    },\n\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: state.context.dir,\n        id: dom.getDescriptionId(state.context),\n      })\n    },\n\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return\n          event.stopPropagation()\n          send(\"CLOSE\")\n        },\n      })\n    },\n  }\n}\n","import { ariaHidden } from \"@zag-js/aria-hidden\"\nimport { createMachine } from \"@zag-js/core\"\nimport { trackDismissableElement } from \"@zag-js/dismissable\"\nimport { getInitialFocus, nextTick, raf } from \"@zag-js/dom-query\"\nimport { preventBodyScroll } from \"@zag-js/remove-scroll\"\nimport { compact } from \"@zag-js/utils\"\nimport { createFocusTrap, type FocusTrap } from \"focus-trap\"\nimport { dom } from \"./dialog.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./dialog.types\"\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"dialog\",\n      initial: ctx.open ? \"open\" : \"closed\",\n\n      context: {\n        role: \"dialog\",\n        renderedElements: {\n          title: true,\n          description: true,\n        },\n        modal: true,\n        trapFocus: true,\n        preventScroll: true,\n        closeOnInteractOutside: true,\n        closeOnEscape: true,\n        restoreFocus: true,\n        ...ctx,\n      },\n\n      created: [\"checkInitialFocusEl\"],\n\n      watch: {\n        open: [\"toggleVisibility\"],\n      },\n\n      states: {\n        open: {\n          entry: [\"checkRenderedElements\", \"syncZIndex\"],\n          activities: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\",\n              actions: [\"setFinalFocus\"],\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\", \"setFinalFocus\"],\n              },\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\", \"setFinalFocus\"],\n              },\n            ],\n          },\n        },\n        closed: {\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\",\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"],\n              },\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"],\n              },\n            ],\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx) => !!ctx[\"open.controlled\"],\n      },\n      activities: {\n        trackDismissableElement(ctx, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx)\n          return trackDismissableElement(getContentEl, {\n            defer: true,\n            pointerBlocking: ctx.modal,\n            exclude: [dom.getTriggerEl(ctx)],\n            onInteractOutside(event) {\n              ctx.onInteractOutside?.(event)\n              if (!ctx.closeOnInteractOutside || ctx.role === \"alertdialog\") {\n                event.preventDefault()\n              }\n            },\n            persistentElements: ctx.persistentElements,\n            onFocusOutside: ctx.onFocusOutside,\n            onPointerDownOutside: ctx.onPointerDownOutside,\n            onEscapeKeyDown(event) {\n              ctx.onEscapeKeyDown?.(event)\n              if (!ctx.closeOnEscape) {\n                event.preventDefault()\n              } else {\n                send({ type: \"CLOSE\", src: \"escape-key\" })\n              }\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\" })\n            },\n          })\n        },\n        preventScroll(ctx) {\n          if (!ctx.preventScroll) return\n          return preventBodyScroll(dom.getDoc(ctx))\n        },\n        trapFocus(ctx) {\n          if (!ctx.trapFocus || !ctx.modal) return\n          let trap: FocusTrap\n\n          const cleanup = nextTick(() => {\n            const contentEl = dom.getContentEl(ctx)\n            if (!contentEl) return\n            trap = createFocusTrap(contentEl, {\n              document: dom.getDoc(ctx),\n              escapeDeactivates: false,\n              preventScroll: true,\n              returnFocusOnDeactivate: false,\n              fallbackFocus: contentEl,\n              allowOutsideClick: true,\n              initialFocus: getInitialFocus({\n                root: contentEl,\n                getInitialEl: ctx.initialFocusEl,\n              }),\n            })\n\n            try {\n              trap.activate()\n            } catch {}\n          })\n          return () => {\n            trap?.deactivate()\n            cleanup()\n          }\n        },\n        hideContentBelow(ctx) {\n          if (!ctx.modal) return\n          const getElements = () => [dom.getContentEl(ctx)]\n          return ariaHidden(getElements, { defer: true })\n        },\n      },\n      actions: {\n        checkInitialFocusEl(ctx) {\n          if (!ctx.initialFocusEl && ctx.role === \"alertdialog\") {\n            ctx.initialFocusEl = () => dom.getCloseTriggerEl(ctx)\n          }\n        },\n        checkRenderedElements(ctx) {\n          raf(() => {\n            ctx.renderedElements.title = !!dom.getTitleEl(ctx)\n            ctx.renderedElements.description = !!dom.getDescriptionEl(ctx)\n          })\n        },\n        syncZIndex(ctx) {\n          raf(() => {\n            // sync z-index of positioner with content\n            const contentEl = dom.getContentEl(ctx)\n            if (!contentEl) return\n\n            const win = dom.getWin(ctx)\n            const styles = win.getComputedStyle(contentEl)\n\n            const elems = [dom.getPositionerEl(ctx), dom.getBackdropEl(ctx)]\n            elems.forEach((node) => {\n              node?.style.setProperty(\"--z-index\", styles.zIndex)\n            })\n          })\n        },\n        invokeOnClose(ctx) {\n          ctx.onOpenChange?.({ open: false })\n        },\n        invokeOnOpen(ctx) {\n          ctx.onOpenChange?.({ open: true })\n        },\n        toggleVisibility(ctx, evt, { send }) {\n          send({ type: ctx.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt })\n        },\n        setFinalFocus(ctx) {\n          if (!ctx.restoreFocus) return\n          queueMicrotask(() => {\n            const el = ctx.finalFocusEl?.() ?? dom.getTriggerEl(ctx)\n            el?.focus({ preventScroll: true })\n          })\n        },\n      },\n    },\n  )\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { UserDefinedContext } from \"./dialog.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"aria-label\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"finalFocusEl\",\n  \"getRootNode\",\n  \"getRootNode\",\n  \"id\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"open.controlled\",\n  \"open\",\n  \"persistentElements\",\n  \"preventScroll\",\n  \"restoreFocus\",\n  \"role\",\n  \"trapFocus\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n"],"mappings":"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","names":["ctx"]}