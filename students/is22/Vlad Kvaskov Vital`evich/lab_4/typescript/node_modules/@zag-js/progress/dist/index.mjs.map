{"version":3,"sources":["../src/progress.anatomy.ts","../src/progress.dom.ts","../src/progress.connect.ts","../src/progress.machine.ts","../src/progress.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"progress\").parts(\n  \"root\",\n  \"label\",\n  \"track\",\n  \"range\",\n  \"valueText\",\n  \"view\",\n  \"circle\",\n  \"circleTrack\",\n  \"circleRange\",\n)\n\nexport const parts = anatomy.build()\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./progress.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `progress-${ctx.id}`,\n  getTrackId: (ctx: Ctx) => ctx.ids?.track ?? `progress-${ctx.id}-track`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `progress-${ctx.id}-label`,\n  getCircleId: (ctx: Ctx) => ctx.ids?.circle ?? `progress-${ctx.id}-circle`,\n})\n","import type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./progress.anatomy\"\nimport { dom } from \"./progress.dom\"\nimport type { MachineApi, MachineContext, ProgressState, Send, State } from \"./progress.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const percent = state.context.percent\n  const percentAsString = state.context.isIndeterminate ? \"\" : `${percent}%`\n\n  const max = state.context.max\n  const min = state.context.min\n\n  const orientation = state.context.orientation\n  const translations = state.context.translations\n  const indeterminate = state.context.isIndeterminate\n\n  const value = state.context.value\n  const valueAsString = translations.value({ value, max, percent, min })\n  const progressState = getProgressState(value, max)\n\n  const progressbarProps = {\n    role: \"progressbar\",\n    \"aria-label\": valueAsString,\n    \"data-max\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value ?? undefined,\n    \"data-orientation\": orientation,\n    \"data-state\": progressState,\n  }\n\n  const circleProps = getCircleProps(state.context)\n\n  return {\n    value,\n    valueAsString,\n    min,\n    max,\n    percent,\n    percentAsString,\n    indeterminate,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value })\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: max })\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: min })\n    },\n\n    getRootProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-max\": max,\n        \"data-value\": value ?? undefined,\n        \"data-state\": progressState,\n        \"data-orientation\": orientation,\n        style: {\n          \"--percent\": indeterminate ? undefined : percent,\n        },\n      })\n    },\n\n    getLabelProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        ...parts.label.attrs,\n        \"data-orientation\": orientation,\n      })\n    },\n\n    getValueTextProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        \"aria-live\": \"polite\",\n        ...parts.valueText.attrs,\n      })\n    },\n\n    getTrackProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getTrackId(state.context),\n        ...parts.track.attrs,\n        ...progressbarProps,\n      })\n    },\n\n    getRangeProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.range.attrs,\n        \"data-orientation\": orientation,\n        \"data-state\": progressState,\n        style: {\n          [state.context.isHorizontal ? \"width\" : \"height\"]: indeterminate ? undefined : `${percent}%`,\n        },\n      })\n    },\n\n    getCircleProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getCircleId(state.context),\n        ...parts.circle.attrs,\n        ...progressbarProps,\n        ...circleProps.root,\n      })\n    },\n\n    getCircleTrackProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        \"data-orientation\": orientation,\n        ...parts.circleTrack.attrs,\n        ...circleProps.track,\n      })\n    },\n\n    getCircleRangeProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.circleRange.attrs,\n        ...circleProps.range,\n        \"data-state\": progressState,\n      })\n    },\n\n    getViewProps(props) {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.view.attrs,\n        \"data-state\": props.state,\n        hidden: props.state !== progressState,\n      })\n    },\n  }\n}\n\nfunction getProgressState(value: number | null, maxValue: number): ProgressState {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\"\n}\n\nfunction getCircleProps(ctx: MachineContext) {\n  const circleProps = {\n    style: {\n      \"--radius\": \"calc(var(--size) / 2 - var(--thickness) / 2)\",\n      cx: \"calc(var(--size) / 2)\",\n      cy: \"calc(var(--size) / 2)\",\n      r: \"var(--radius)\",\n      fill: \"transparent\",\n      strokeWidth: \"var(--thickness)\",\n    },\n  }\n  return {\n    root: {\n      style: {\n        width: \"var(--size)\",\n        height: \"var(--size)\",\n      },\n    },\n    track: circleProps,\n    range: {\n      opacity: ctx.value === 0 ? 0 : undefined,\n      style: {\n        ...circleProps.style,\n        \"--percent\": ctx.percent,\n        \"--circumference\": `calc(2 * 3.14159 * var(--radius))`,\n        \"--offset\": `calc(var(--circumference) * (100 - var(--percent)) / 100)`,\n        strokeDashoffset: `calc(var(--circumference) * ((100 - var(--percent)) / 100))`,\n        strokeDasharray: ctx.isIndeterminate ? undefined : `var(--circumference)`,\n        transformOrigin: \"center\",\n        transform: \"rotate(-90deg)\",\n      },\n    },\n  }\n}\n","import { createMachine } from \"@zag-js/core\"\nimport { compact, isNumber } from \"@zag-js/utils\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./progress.types\"\n\nfunction midValue(min: number, max: number) {\n  return min + (max - min) / 2\n}\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"progress\",\n      initial: \"idle\",\n      context: {\n        max: ctx.max ?? 100,\n        min: ctx.min ?? 0,\n        value: midValue(ctx.min ?? 0, ctx.max ?? 100),\n        orientation: \"horizontal\",\n        translations: {\n          value: ({ percent }) => (percent === -1 ? \"loading...\" : `${percent} percent`),\n          ...ctx.translations,\n        },\n        ...ctx,\n      },\n\n      created: [\"validateContext\"],\n\n      computed: {\n        isIndeterminate: (ctx) => ctx.value === null,\n        percent(ctx) {\n          if (!isNumber(ctx.value)) return -1\n          return Math.round(((ctx.value - ctx.min) / (ctx.max - ctx.min)) * 100)\n        },\n        isAtMax: (ctx) => ctx.value === ctx.max,\n        isHorizontal: (ctx) => ctx.orientation === \"horizontal\",\n        isRtl: (ctx) => ctx.dir === \"rtl\",\n      },\n\n      states: {\n        idle: {\n          on: {\n            \"VALUE.SET\": {\n              actions: [\"setValue\"],\n            },\n          },\n        },\n      },\n    },\n    {\n      actions: {\n        setValue: (ctx, evt) => {\n          ctx.value = evt.value === null ? null : Math.max(0, Math.min(evt.value, ctx.max))\n        },\n        validateContext: (ctx) => {\n          if (ctx.value == null) return\n\n          if (!isValidNumber(ctx.max)) {\n            throw new Error(`[progress] The max value passed \\`${ctx.max}\\` is not a valid number`)\n          }\n\n          if (!isValidMax(ctx.value, ctx.max)) {\n            throw new Error(`[progress] The value passed \\`${ctx.value}\\` exceeds the max value \\`${ctx.max}\\``)\n          }\n\n          if (!isValidMin(ctx.value, ctx.min)) {\n            throw new Error(`[progress] The value passed \\`${ctx.value}\\` exceeds the min value \\`${ctx.min}\\``)\n          }\n        },\n      },\n    },\n  )\n}\n\nfunction isValidNumber(max: any) {\n  return isNumber(max) && !isNaN(max)\n}\n\nfunction isValidMax(value: number, max: number) {\n  return isValidNumber(value) && value <= max\n}\n\nfunction isValidMin(value: number, min: number) {\n  return isValidNumber(value) && value >= min\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { UserDefinedContext } from \"./progress.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"max\",\n  \"min\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n"],"mappings":"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","names":["value","props","ctx"]}