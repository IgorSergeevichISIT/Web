'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../../utils/create-split-props.js';
import { ark } from '../factory.js';
import { TreeViewBranchProvider } from './use-tree-view-branch-context.js';
import { useTreeViewContext } from './use-tree-view-context.js';
import { useTreeViewDepthContext, TreeViewDepthProvider } from './use-tree-view-depth-context.js';

const TreeViewBranch = forwardRef((props, ref) => {
  const [itemProps, localProps] = createSplitProps()(props, ["disabled", "value"]);
  const treeView = useTreeViewContext();
  const depth = useTreeViewDepthContext();
  const branchContext = { ...itemProps, depth };
  const mergedProps = mergeProps(treeView.getBranchProps(branchContext), localProps);
  return /* @__PURE__ */ jsx(TreeViewDepthProvider, { value: depth + 1, children: /* @__PURE__ */ jsx(TreeViewBranchProvider, { value: branchContext, children: /* @__PURE__ */ jsx(ark.li, { ...mergedProps, ref }) }) });
});
TreeViewBranch.displayName = "TreeViewBranch";

export { TreeViewBranch };
