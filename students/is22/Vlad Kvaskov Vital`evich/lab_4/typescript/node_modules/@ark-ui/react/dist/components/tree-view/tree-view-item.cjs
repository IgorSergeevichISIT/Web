'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../../utils/create-split-props.cjs');
const factory = require('../factory.cjs');
const useTreeViewContext = require('./use-tree-view-context.cjs');
const useTreeViewDepthContext = require('./use-tree-view-depth-context.cjs');
const useTreeViewItemContext = require('./use-tree-view-item-context.cjs');
const useTreeViewItemPropsContext = require('./use-tree-view-item-props-context.cjs');

const TreeViewItem = react.forwardRef((props, ref) => {
  const [{ value, disabled }, localProps] = createSplitProps.createSplitProps()(props, [
    "disabled",
    "value"
  ]);
  const treeView = useTreeViewContext.useTreeViewContext();
  const depth = useTreeViewDepthContext.useTreeViewDepthContext();
  const itemProps = { value, disabled, depth };
  const mergedProps = react$1.mergeProps(treeView.getItemProps(itemProps), localProps);
  const itemState = treeView.getItemState(itemProps);
  return /* @__PURE__ */ jsxRuntime.jsx(useTreeViewItemPropsContext.TreeViewItemPropsProvider, { value: itemProps, children: /* @__PURE__ */ jsxRuntime.jsx(useTreeViewItemContext.TreeViewItemProvider, { value: itemState, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.li, { ...mergedProps, ref }) }) });
});
TreeViewItem.displayName = "TreeViewItem";

exports.TreeViewItem = TreeViewItem;
