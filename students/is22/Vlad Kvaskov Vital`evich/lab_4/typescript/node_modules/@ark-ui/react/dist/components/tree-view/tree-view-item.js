'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../../utils/create-split-props.js';
import { ark } from '../factory.js';
import { useTreeViewContext } from './use-tree-view-context.js';
import { useTreeViewDepthContext } from './use-tree-view-depth-context.js';
import { TreeViewItemProvider } from './use-tree-view-item-context.js';
import { TreeViewItemPropsProvider } from './use-tree-view-item-props-context.js';

const TreeViewItem = forwardRef((props, ref) => {
  const [{ value, disabled }, localProps] = createSplitProps()(props, [
    "disabled",
    "value"
  ]);
  const treeView = useTreeViewContext();
  const depth = useTreeViewDepthContext();
  const itemProps = { value, disabled, depth };
  const mergedProps = mergeProps(treeView.getItemProps(itemProps), localProps);
  const itemState = treeView.getItemState(itemProps);
  return /* @__PURE__ */ jsx(TreeViewItemPropsProvider, { value: itemProps, children: /* @__PURE__ */ jsx(TreeViewItemProvider, { value: itemState, children: /* @__PURE__ */ jsx(ark.li, { ...mergedProps, ref }) }) });
});
TreeViewItem.displayName = "TreeViewItem";

export { TreeViewItem };
